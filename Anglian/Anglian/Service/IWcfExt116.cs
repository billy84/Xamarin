using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Anglian.Classes;
using System.Collections.ObjectModel;

namespace Anglian.Service
{
    public interface IWcfExt116
    {
        Task CloseAXConnection();
        Task<FetchSurveyFailedReasonsResult> FetchFailedSurveyReasons(
            string v_sCompanyName,
            DateTime v_dLastUpdate,
            string v_sAuthID,
            string v_sToken);
        Task<BaseEnumResult> ReturnBaseEnumsAsync(
            string v_sCompanyName,
            ObservableCollection<BaseEnumField> v_beFields,
            string v_sAuthID,
            string v_sToken);
        Task<SystemsAvailableResult> ReturnAreSystemsAvailableAsync(
            string v_sCompanyName,
            string v_sUserProfile,
            string v_sAuthID,
            string v_sToken);
        Task<SettingsCheckResult> CheckForUpdatedSettingsAsync(
            string v_sCompanyName, 
            ObservableCollection<SettingDetails> v_svSettings, 
            string v_sAuthID, 
            string v_sToken);

        Task<ProjectSearchResult> SearchForContractAsync(
            string v_sCompanyName,
            string v_sProjectName,
            string v_sAuthID,
            string v_sToken);
        Task<ProjectValidationResult> ValidateProjectAsync(
            string v_sCompanyName,
            string v_sProjectNo,
            string v_sAuthID,
            string v_sToken);
        Task<SubProjectsListResult> ReturnSubProjectsListAsync(
            string v_sCompanyName,
            string v_sProjectNo,
            string v_sPurpose,
            string v_sAuthID,
            string v_sToken);
        Task<SubProjectDataResult> ReturnSubProjectDataAsync(
            string v_sCompanyName,
            string v_sProjectNo,
            string v_sPurpose,
            string v_sAuthID,
            string v_sToken);
        Task<SubProjectFilesResult> ReturnSubProjectFilesAsync(
            string v_sCompanyName,
            string v_sProjectNo,
            string v_sAuthID,
            string v_sToken);
        Task<SubProjectFileDownloadResult> ReturnSubProjectFileDownloadAsync(
            string v_sFileName, 
            string v_sAuthID, 
            string v_sToken);
        Task<UploadChangesResult> UploadSubProjectDataChangesAsync(
            string v_sCompanyName,
            string v_sPurpose,
            string v_sUserName,
            string v_sMachineName,
            string v_sSubProjectNo,
            ObservableCollection<AXDataUploadDataChange> v_cChanges,
            string v_sAuthID,
            string v_sToken);
        Task<UploadUnitsResult> UploadUnitInstallationStatusAsync(
            string v_sCompanyName,
            string v_sSubProjectNo,
            string v_sUserProfile,
            string v_sMachineName,
            DateTime v_dInstallationDate,
            string v_sInstallationTeam,
            ObservableCollection<UnitDetails> v_udUnits,
            string v_sAuthID,
            string v_sToken);
        Task<UploadChangesResult> UploadSubProjectNotesChangesAsync(
            string v_sCompanyName,
            string v_sPurpose,
            string v_sUserName,
            string v_sMachineName,
            string v_sSubProjectNo,
            ObservableCollection<NoteDetails> v_cNotes,
            string v_sAuthID,
            string v_sToken);
        Task<DownloadDataChangesResult> CheckForDataDownloadChangesAsync(
            string v_sCompanyName,
            string v_sPurpose,
            ObservableCollection<DownloadDataChange> v_cSubProjects,
            bool v_bCheckForNewSubProjects,
            string v_sAuthID,
            string v_sToken);
        Task<FileChangesResult> ReturnSubProjectFileChangesAsync(
            string v_sCompanyName,
            string v_sProjectNo,
            string v_sSubProjectNo,
            ObservableCollection<SubProjectFileDetail> v_fdFiles,
            string v_sAuthID,
            string v_sToken);
        Task<UploadChangesResult> UploadSubProjectFilesAsync(
            string v_sCompanyName,
            string v_sSubProjectNo,
            string v_sUserName,
            string v_sMachineName,
            ObservableCollection<UploadFileChange> v_cChanges,
            string v_sAuthID,
            string v_sToken);
    }
}
