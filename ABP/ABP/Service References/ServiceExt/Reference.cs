//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ABP.ServiceExt {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnitDetails", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial struct UnitDetails : System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> dInstalledDateField;
        
        private System.Nullable<int> iInstalledStatusField;
        
        private int iUNITNUMBERField;
        
        private string sITEMIDField;
        
        private string sSTYLEField;
        
        private string sUNITLOCATIONField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dInstalledDate {
            get {
                return this.dInstalledDateField;
            }
            set {
                if ((this.dInstalledDateField.Equals(value) != true)) {
                    this.dInstalledDateField = value;
                    this.RaisePropertyChanged("dInstalledDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> iInstalledStatus {
            get {
                return this.iInstalledStatusField;
            }
            set {
                if ((this.iInstalledStatusField.Equals(value) != true)) {
                    this.iInstalledStatusField = value;
                    this.RaisePropertyChanged("iInstalledStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int iUNITNUMBER {
            get {
                return this.iUNITNUMBERField;
            }
            set {
                if ((this.iUNITNUMBERField.Equals(value) != true)) {
                    this.iUNITNUMBERField = value;
                    this.RaisePropertyChanged("iUNITNUMBER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sITEMID {
            get {
                return this.sITEMIDField;
            }
            set {
                if ((object.ReferenceEquals(this.sITEMIDField, value) != true)) {
                    this.sITEMIDField = value;
                    this.RaisePropertyChanged("sITEMID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sSTYLE {
            get {
                return this.sSTYLEField;
            }
            set {
                if ((object.ReferenceEquals(this.sSTYLEField, value) != true)) {
                    this.sSTYLEField = value;
                    this.RaisePropertyChanged("sSTYLE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sUNITLOCATION {
            get {
                return this.sUNITLOCATIONField;
            }
            set {
                if ((object.ReferenceEquals(this.sUNITLOCATIONField, value) != true)) {
                    this.sUNITLOCATIONField = value;
                    this.RaisePropertyChanged("sUNITLOCATION");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UploadUnitsResult", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial class UploadUnitsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool bSuccessfullField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bSuccessfull {
            get {
                return this.bSuccessfullField;
            }
            set {
                if ((this.bSuccessfullField.Equals(value) != true)) {
                    this.bSuccessfullField = value;
                    this.RaisePropertyChanged("bSuccessfull");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckUnitChangesResult", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial class CheckUnitChangesResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UnitDetails> UnitsField;
        
        private bool bSuccessfullField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UnitDetails> Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitsField, value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bSuccessfull {
            get {
                return this.bSuccessfullField;
            }
            set {
                if ((this.bSuccessfullField.Equals(value) != true)) {
                    this.bSuccessfullField = value;
                    this.RaisePropertyChanged("bSuccessfull");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectSearchResult", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial class ProjectSearchResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SearchResult> SearchResultsField;
        
        private bool bSuccessfullField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SearchResult> SearchResults {
            get {
                return this.SearchResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchResultsField, value) != true)) {
                    this.SearchResultsField = value;
                    this.RaisePropertyChanged("SearchResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bSuccessfull {
            get {
                return this.bSuccessfullField;
            }
            set {
                if ((this.bSuccessfullField.Equals(value) != true)) {
                    this.bSuccessfullField = value;
                    this.RaisePropertyChanged("bSuccessfull");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResult", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial struct SearchResult : System.ComponentModel.INotifyPropertyChanged {
        
        private string ProjectNameField;
        
        private string ProjectNoField;
        
        private string StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectNo {
            get {
                return this.ProjectNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNoField, value) != true)) {
                    this.ProjectNoField = value;
                    this.RaisePropertyChanged("ProjectNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FetchInstallersResult", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial class FetchInstallersResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.InstallerDetails> InstallersField;
        
        private System.DateTime bLastUpdateDateField;
        
        private bool bSuccessfullField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.InstallerDetails> Installers {
            get {
                return this.InstallersField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallersField, value) != true)) {
                    this.InstallersField = value;
                    this.RaisePropertyChanged("Installers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime bLastUpdateDate {
            get {
                return this.bLastUpdateDateField;
            }
            set {
                if ((this.bLastUpdateDateField.Equals(value) != true)) {
                    this.bLastUpdateDateField = value;
                    this.RaisePropertyChanged("bLastUpdateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bSuccessfull {
            get {
                return this.bSuccessfullField;
            }
            set {
                if ((this.bSuccessfullField.Equals(value) != true)) {
                    this.bSuccessfullField = value;
                    this.RaisePropertyChanged("bSuccessfull");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstallerDetails", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial struct InstallerDetails : System.ComponentModel.INotifyPropertyChanged {
        
        private string sACCOUNTNUMField;
        
        private string sNAMEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sACCOUNTNUM {
            get {
                return this.sACCOUNTNUMField;
            }
            set {
                if ((object.ReferenceEquals(this.sACCOUNTNUMField, value) != true)) {
                    this.sACCOUNTNUMField = value;
                    this.RaisePropertyChanged("sACCOUNTNUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sNAME {
            get {
                return this.sNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.sNAMEField, value) != true)) {
                    this.sNAMEField = value;
                    this.RaisePropertyChanged("sNAME");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SettingDetails", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial struct SettingDetails : System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime LastUpdateField;
        
        private string SettingNameField;
        
        private string SettingValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdate {
            get {
                return this.LastUpdateField;
            }
            set {
                if ((this.LastUpdateField.Equals(value) != true)) {
                    this.LastUpdateField = value;
                    this.RaisePropertyChanged("LastUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SettingName {
            get {
                return this.SettingNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingNameField, value) != true)) {
                    this.SettingNameField = value;
                    this.RaisePropertyChanged("SettingName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SettingValue {
            get {
                return this.SettingValueField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingValueField, value) != true)) {
                    this.SettingValueField = value;
                    this.RaisePropertyChanged("SettingValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SettingsCheckResult", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial class SettingsCheckResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SettingDetails> SettingsField;
        
        private bool bSuccessfullField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SettingDetails> Settings {
            get {
                return this.SettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingsField, value) != true)) {
                    this.SettingsField = value;
                    this.RaisePropertyChanged("Settings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bSuccessfull {
            get {
                return this.bSuccessfullField;
            }
            set {
                if ((this.bSuccessfullField.Equals(value) != true)) {
                    this.bSuccessfullField = value;
                    this.RaisePropertyChanged("bSuccessfull");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemsAvailableResult", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial class SystemsAvailableResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool SystemsAvailableField;
        
        private bool UserAccountOKField;
        
        private bool bSuccessfullField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SystemsAvailable {
            get {
                return this.SystemsAvailableField;
            }
            set {
                if ((this.SystemsAvailableField.Equals(value) != true)) {
                    this.SystemsAvailableField = value;
                    this.RaisePropertyChanged("SystemsAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UserAccountOK {
            get {
                return this.UserAccountOKField;
            }
            set {
                if ((this.UserAccountOKField.Equals(value) != true)) {
                    this.UserAccountOKField = value;
                    this.RaisePropertyChanged("UserAccountOK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bSuccessfull {
            get {
                return this.bSuccessfullField;
            }
            set {
                if ((this.bSuccessfullField.Equals(value) != true)) {
                    this.bSuccessfullField = value;
                    this.RaisePropertyChanged("bSuccessfull");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubProjectFileDetail", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial struct SubProjectFileDetail : System.ComponentModel.INotifyPropertyChanged {
        
        private string sProjectNoField;
        
        private string sSubProjectNoField;
        
        private System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SubProjectFile> sfFilesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sProjectNo {
            get {
                return this.sProjectNoField;
            }
            set {
                if ((object.ReferenceEquals(this.sProjectNoField, value) != true)) {
                    this.sProjectNoField = value;
                    this.RaisePropertyChanged("sProjectNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sSubProjectNo {
            get {
                return this.sSubProjectNoField;
            }
            set {
                if ((object.ReferenceEquals(this.sSubProjectNoField, value) != true)) {
                    this.sSubProjectNoField = value;
                    this.RaisePropertyChanged("sSubProjectNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SubProjectFile> sfFiles {
            get {
                return this.sfFilesField;
            }
            set {
                if ((object.ReferenceEquals(this.sfFilesField, value) != true)) {
                    this.sfFilesField = value;
                    this.RaisePropertyChanged("sfFiles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubProjectFile", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial struct SubProjectFile : System.ComponentModel.INotifyPropertyChanged {
        
        private string CommentsField;
        
        private string FileNameField;
        
        private System.DateTime ModifiedDateField;
        
        private bool bFileDeletedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bFileDeleted {
            get {
                return this.bFileDeletedField;
            }
            set {
                if ((this.bFileDeletedField.Equals(value) != true)) {
                    this.bFileDeletedField = value;
                    this.RaisePropertyChanged("bFileDeleted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileChangesResult", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial class FileChangesResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool bSuccessfullField;
        
        private System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SubProjectFileDetail> sfChangesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bSuccessfull {
            get {
                return this.bSuccessfullField;
            }
            set {
                if ((this.bSuccessfullField.Equals(value) != true)) {
                    this.bSuccessfullField = value;
                    this.RaisePropertyChanged("bSuccessfull");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SubProjectFileDetail> sfChanges {
            get {
                return this.sfChangesField;
            }
            set {
                if ((object.ReferenceEquals(this.sfChangesField, value) != true)) {
                    this.sfChangesField = value;
                    this.RaisePropertyChanged("sfChanges");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DownloadDataChange", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial struct DownloadDataChange : System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime ActivitiesTable_ModDateField;
        
        private System.DateTime Delivery_ModDateField;
        
        private System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.clsRealtimeNoteKeyValues> NotesField;
        
        private System.DateTime ProjTable_ModDateField;
        
        private System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UnitDetails> UnitsField;
        
        private string sProjectNoField;
        
        private string sSubProjectNoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActivitiesTable_ModDate {
            get {
                return this.ActivitiesTable_ModDateField;
            }
            set {
                if ((this.ActivitiesTable_ModDateField.Equals(value) != true)) {
                    this.ActivitiesTable_ModDateField = value;
                    this.RaisePropertyChanged("ActivitiesTable_ModDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Delivery_ModDate {
            get {
                return this.Delivery_ModDateField;
            }
            set {
                if ((this.Delivery_ModDateField.Equals(value) != true)) {
                    this.Delivery_ModDateField = value;
                    this.RaisePropertyChanged("Delivery_ModDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.clsRealtimeNoteKeyValues> Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ProjTable_ModDate {
            get {
                return this.ProjTable_ModDateField;
            }
            set {
                if ((this.ProjTable_ModDateField.Equals(value) != true)) {
                    this.ProjTable_ModDateField = value;
                    this.RaisePropertyChanged("ProjTable_ModDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UnitDetails> Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitsField, value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sProjectNo {
            get {
                return this.sProjectNoField;
            }
            set {
                if ((object.ReferenceEquals(this.sProjectNoField, value) != true)) {
                    this.sProjectNoField = value;
                    this.RaisePropertyChanged("sProjectNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sSubProjectNo {
            get {
                return this.sSubProjectNoField;
            }
            set {
                if ((object.ReferenceEquals(this.sSubProjectNoField, value) != true)) {
                    this.sSubProjectNoField = value;
                    this.RaisePropertyChanged("sSubProjectNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsRealtime.NoteKeyValues", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_INTERFACE_F45c_R01")]
    public partial struct clsRealtimeNoteKeyValues : System.ComponentModel.INotifyPropertyChanged {
        
        private int DeviceIDKeyField;
        
        private long NotesRecIDField;
        
        private string ProjectNoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceIDKey {
            get {
                return this.DeviceIDKeyField;
            }
            set {
                if ((this.DeviceIDKeyField.Equals(value) != true)) {
                    this.DeviceIDKeyField = value;
                    this.RaisePropertyChanged("DeviceIDKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long NotesRecID {
            get {
                return this.NotesRecIDField;
            }
            set {
                if ((this.NotesRecIDField.Equals(value) != true)) {
                    this.NotesRecIDField = value;
                    this.RaisePropertyChanged("NotesRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectNo {
            get {
                return this.ProjectNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNoField, value) != true)) {
                    this.ProjectNoField = value;
                    this.RaisePropertyChanged("ProjectNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DownloadDataChangesResult", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial class DownloadDataChangesResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool bSuccessfullField;
        
        private System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SubProjectData> pdChangedField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> sDeletedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bSuccessfull {
            get {
                return this.bSuccessfullField;
            }
            set {
                if ((this.bSuccessfullField.Equals(value) != true)) {
                    this.bSuccessfullField = value;
                    this.RaisePropertyChanged("bSuccessfull");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SubProjectData> pdChanged {
            get {
                return this.pdChangedField;
            }
            set {
                if ((object.ReferenceEquals(this.pdChangedField, value) != true)) {
                    this.pdChangedField = value;
                    this.RaisePropertyChanged("pdChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> sDeleted {
            get {
                return this.sDeletedField;
            }
            set {
                if ((object.ReferenceEquals(this.sDeletedField, value) != true)) {
                    this.sDeletedField = value;
                    this.RaisePropertyChanged("sDeleted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubProjectData", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial struct SubProjectData : System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> ABPAWORDERCOMPLETEDDATEField;
        
        private string ABPAWORIGINALSUBPROJECTIDField;
        
        private System.Nullable<int> ABPAXACCESSEQUIPMENTField;
        
        private System.Nullable<int> ABPAXASBESTOSPRESUMEDField;
        
        private System.Nullable<int> ABPAXFLOORLEVELField;
        
        private string ABPAXHealthSaferyIncompleteUploadedByField;
        
        private System.Nullable<int> ABPAXHealthSafetyIncompleteField;
        
        private System.DateTime ABPAXHealthSafetyIncompleteDateUploadedField;
        
        private string ABPAXINSTALLATIONTEAMField;
        
        private System.Nullable<int> ABPAXINSTALLATIONTYPEField;
        
        private System.Nullable<int> ABPAXINSTALLLETTERREQUIREDField;
        
        private System.Nullable<System.DateTime> ABPAXINSTALLLETTERSENTDATE01Field;
        
        private System.Nullable<System.DateTime> ABPAXINSTALLLETTERSENTDATE02Field;
        
        private System.Nullable<System.DateTime> ABPAXINSTALLLETTERSENTDATE03Field;
        
        private System.Nullable<int> ABPAXINSTALLNEXTDAYSMSField;
        
        private System.Nullable<int> ABPAXINSTALLSMSSENTField;
        
        private System.Nullable<int> ABPAXINTERNDAMAGEField;
        
        private System.Nullable<int> ABPAXPERMANENTGASVENTField;
        
        private System.Nullable<int> ABPAXPUBLICPROTECTField;
        
        private System.Nullable<int> ABPAXSERVICESTOMOVEField;
        
        private System.Nullable<int> ABPAXSTRUCTURALFAULTSField;
        
        private System.Nullable<int> ABPAXWINDOWBOARDField;
        
        private System.Nullable<int> ABPAXWRKACCRESTRICTIONSField;
        
        private string DeliveryCityField;
        
        private string DeliveryStreetField;
        
        private System.Nullable<int> Delivery_ConfirmedAppointmentIndicatorField;
        
        private System.Nullable<System.DateTime> Delivery_EndDateTimeField;
        
        private System.Nullable<System.DateTime> Delivery_ModifiedDateTimeField;
        
        private System.Nullable<System.DateTime> Delivery_StartDateTimeField;
        
        private string DlvStateField;
        
        private string DlvZipCodeField;
        
        private string EmailField;
        
        private System.Nullable<System.DateTime> EndDateTimeField;
        
        private System.Nullable<System.DateTime> MODIFIEDDATETIMEField;
        
        private System.Nullable<int> MXM1002SequenceNrField;
        
        private System.Nullable<System.DateTime> MXM1002TrfDateField;
        
        private string MXMAlternativeContactMobileNoField;
        
        private string MXMAlternativeContactNameField;
        
        private string MXMAlternativeContactTelNoField;
        
        private System.Nullable<int> MXMConfirmedAppointmentIndicatorField;
        
        private System.Nullable<int> MXMContactBySMSField;
        
        private System.Nullable<int> MXMDisabledAdaptionsRequiredField;
        
        private System.Nullable<int> MXMDoorChoiceFormReceivedField;
        
        private System.Nullable<int> MXMNextDaySMSField;
        
        private System.Nullable<int> MXMPropertyTypeField;
        
        private string MXMResidentMobileNoField;
        
        private string MXMResidentNameField;
        
        private System.Nullable<int> MXMSMSSentField;
        
        private string MXMSpecialResidentNoteField;
        
        private System.Nullable<System.DateTime> MXMSurveyLetterSentDate01Field;
        
        private System.Nullable<System.DateTime> MXMSurveyLetterSentDate02Field;
        
        private System.Nullable<System.DateTime> MXMSurveyLetterSentDate03Field;
        
        private System.Nullable<int> MXMSurveyletterRequiredField;
        
        private string MXMSurveyorNameField;
        
        private string MXMSurveyorPCTagField;
        
        private string MXMSurveyorProfileField;
        
        private string MXMTelephoneNoField;
        
        private System.Nullable<int> Mxm1002InstallStatusField;
        
        private System.Nullable<int> Mxm1002ProgressStatusField;
        
        private string MxmProjDescriptionField;
        
        private string NameField;
        
        private System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.NoteDetails> NotesField;
        
        private string ParentIDField;
        
        private string ProjIdField;
        
        private string PurposeField;
        
        private System.Nullable<System.DateTime> SMMActivities_MODIFIEDDATETIMEField;
        
        private System.Nullable<System.DateTime> StartDateTimeField;
        
        private System.Nullable<int> StatusField;
        
        private string URLField;
        
        private System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UnitDetails> UnitsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ABPAWORDERCOMPLETEDDATE {
            get {
                return this.ABPAWORDERCOMPLETEDDATEField;
            }
            set {
                if ((this.ABPAWORDERCOMPLETEDDATEField.Equals(value) != true)) {
                    this.ABPAWORDERCOMPLETEDDATEField = value;
                    this.RaisePropertyChanged("ABPAWORDERCOMPLETEDDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ABPAWORIGINALSUBPROJECTID {
            get {
                return this.ABPAWORIGINALSUBPROJECTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ABPAWORIGINALSUBPROJECTIDField, value) != true)) {
                    this.ABPAWORIGINALSUBPROJECTIDField = value;
                    this.RaisePropertyChanged("ABPAWORIGINALSUBPROJECTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ABPAXACCESSEQUIPMENT {
            get {
                return this.ABPAXACCESSEQUIPMENTField;
            }
            set {
                if ((this.ABPAXACCESSEQUIPMENTField.Equals(value) != true)) {
                    this.ABPAXACCESSEQUIPMENTField = value;
                    this.RaisePropertyChanged("ABPAXACCESSEQUIPMENT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ABPAXASBESTOSPRESUMED {
            get {
                return this.ABPAXASBESTOSPRESUMEDField;
            }
            set {
                if ((this.ABPAXASBESTOSPRESUMEDField.Equals(value) != true)) {
                    this.ABPAXASBESTOSPRESUMEDField = value;
                    this.RaisePropertyChanged("ABPAXASBESTOSPRESUMED");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ABPAXFLOORLEVEL {
            get {
                return this.ABPAXFLOORLEVELField;
            }
            set {
                if ((this.ABPAXFLOORLEVELField.Equals(value) != true)) {
                    this.ABPAXFLOORLEVELField = value;
                    this.RaisePropertyChanged("ABPAXFLOORLEVEL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ABPAXHealthSaferyIncompleteUploadedBy {
            get {
                return this.ABPAXHealthSaferyIncompleteUploadedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ABPAXHealthSaferyIncompleteUploadedByField, value) != true)) {
                    this.ABPAXHealthSaferyIncompleteUploadedByField = value;
                    this.RaisePropertyChanged("ABPAXHealthSaferyIncompleteUploadedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ABPAXHealthSafetyIncomplete {
            get {
                return this.ABPAXHealthSafetyIncompleteField;
            }
            set {
                if ((this.ABPAXHealthSafetyIncompleteField.Equals(value) != true)) {
                    this.ABPAXHealthSafetyIncompleteField = value;
                    this.RaisePropertyChanged("ABPAXHealthSafetyIncomplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ABPAXHealthSafetyIncompleteDateUploaded {
            get {
                return this.ABPAXHealthSafetyIncompleteDateUploadedField;
            }
            set {
                if ((this.ABPAXHealthSafetyIncompleteDateUploadedField.Equals(value) != true)) {
                    this.ABPAXHealthSafetyIncompleteDateUploadedField = value;
                    this.RaisePropertyChanged("ABPAXHealthSafetyIncompleteDateUploaded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ABPAXINSTALLATIONTEAM {
            get {
                return this.ABPAXINSTALLATIONTEAMField;
            }
            set {
                if ((object.ReferenceEquals(this.ABPAXINSTALLATIONTEAMField, value) != true)) {
                    this.ABPAXINSTALLATIONTEAMField = value;
                    this.RaisePropertyChanged("ABPAXINSTALLATIONTEAM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ABPAXINSTALLATIONTYPE {
            get {
                return this.ABPAXINSTALLATIONTYPEField;
            }
            set {
                if ((this.ABPAXINSTALLATIONTYPEField.Equals(value) != true)) {
                    this.ABPAXINSTALLATIONTYPEField = value;
                    this.RaisePropertyChanged("ABPAXINSTALLATIONTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ABPAXINSTALLLETTERREQUIRED {
            get {
                return this.ABPAXINSTALLLETTERREQUIREDField;
            }
            set {
                if ((this.ABPAXINSTALLLETTERREQUIREDField.Equals(value) != true)) {
                    this.ABPAXINSTALLLETTERREQUIREDField = value;
                    this.RaisePropertyChanged("ABPAXINSTALLLETTERREQUIRED");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ABPAXINSTALLLETTERSENTDATE01 {
            get {
                return this.ABPAXINSTALLLETTERSENTDATE01Field;
            }
            set {
                if ((this.ABPAXINSTALLLETTERSENTDATE01Field.Equals(value) != true)) {
                    this.ABPAXINSTALLLETTERSENTDATE01Field = value;
                    this.RaisePropertyChanged("ABPAXINSTALLLETTERSENTDATE01");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ABPAXINSTALLLETTERSENTDATE02 {
            get {
                return this.ABPAXINSTALLLETTERSENTDATE02Field;
            }
            set {
                if ((this.ABPAXINSTALLLETTERSENTDATE02Field.Equals(value) != true)) {
                    this.ABPAXINSTALLLETTERSENTDATE02Field = value;
                    this.RaisePropertyChanged("ABPAXINSTALLLETTERSENTDATE02");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ABPAXINSTALLLETTERSENTDATE03 {
            get {
                return this.ABPAXINSTALLLETTERSENTDATE03Field;
            }
            set {
                if ((this.ABPAXINSTALLLETTERSENTDATE03Field.Equals(value) != true)) {
                    this.ABPAXINSTALLLETTERSENTDATE03Field = value;
                    this.RaisePropertyChanged("ABPAXINSTALLLETTERSENTDATE03");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ABPAXINSTALLNEXTDAYSMS {
            get {
                return this.ABPAXINSTALLNEXTDAYSMSField;
            }
            set {
                if ((this.ABPAXINSTALLNEXTDAYSMSField.Equals(value) != true)) {
                    this.ABPAXINSTALLNEXTDAYSMSField = value;
                    this.RaisePropertyChanged("ABPAXINSTALLNEXTDAYSMS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ABPAXINSTALLSMSSENT {
            get {
                return this.ABPAXINSTALLSMSSENTField;
            }
            set {
                if ((this.ABPAXINSTALLSMSSENTField.Equals(value) != true)) {
                    this.ABPAXINSTALLSMSSENTField = value;
                    this.RaisePropertyChanged("ABPAXINSTALLSMSSENT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ABPAXINTERNDAMAGE {
            get {
                return this.ABPAXINTERNDAMAGEField;
            }
            set {
                if ((this.ABPAXINTERNDAMAGEField.Equals(value) != true)) {
                    this.ABPAXINTERNDAMAGEField = value;
                    this.RaisePropertyChanged("ABPAXINTERNDAMAGE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ABPAXPERMANENTGASVENT {
            get {
                return this.ABPAXPERMANENTGASVENTField;
            }
            set {
                if ((this.ABPAXPERMANENTGASVENTField.Equals(value) != true)) {
                    this.ABPAXPERMANENTGASVENTField = value;
                    this.RaisePropertyChanged("ABPAXPERMANENTGASVENT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ABPAXPUBLICPROTECT {
            get {
                return this.ABPAXPUBLICPROTECTField;
            }
            set {
                if ((this.ABPAXPUBLICPROTECTField.Equals(value) != true)) {
                    this.ABPAXPUBLICPROTECTField = value;
                    this.RaisePropertyChanged("ABPAXPUBLICPROTECT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ABPAXSERVICESTOMOVE {
            get {
                return this.ABPAXSERVICESTOMOVEField;
            }
            set {
                if ((this.ABPAXSERVICESTOMOVEField.Equals(value) != true)) {
                    this.ABPAXSERVICESTOMOVEField = value;
                    this.RaisePropertyChanged("ABPAXSERVICESTOMOVE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ABPAXSTRUCTURALFAULTS {
            get {
                return this.ABPAXSTRUCTURALFAULTSField;
            }
            set {
                if ((this.ABPAXSTRUCTURALFAULTSField.Equals(value) != true)) {
                    this.ABPAXSTRUCTURALFAULTSField = value;
                    this.RaisePropertyChanged("ABPAXSTRUCTURALFAULTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ABPAXWINDOWBOARD {
            get {
                return this.ABPAXWINDOWBOARDField;
            }
            set {
                if ((this.ABPAXWINDOWBOARDField.Equals(value) != true)) {
                    this.ABPAXWINDOWBOARDField = value;
                    this.RaisePropertyChanged("ABPAXWINDOWBOARD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ABPAXWRKACCRESTRICTIONS {
            get {
                return this.ABPAXWRKACCRESTRICTIONSField;
            }
            set {
                if ((this.ABPAXWRKACCRESTRICTIONSField.Equals(value) != true)) {
                    this.ABPAXWRKACCRESTRICTIONSField = value;
                    this.RaisePropertyChanged("ABPAXWRKACCRESTRICTIONS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryCity {
            get {
                return this.DeliveryCityField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryCityField, value) != true)) {
                    this.DeliveryCityField = value;
                    this.RaisePropertyChanged("DeliveryCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryStreet {
            get {
                return this.DeliveryStreetField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryStreetField, value) != true)) {
                    this.DeliveryStreetField = value;
                    this.RaisePropertyChanged("DeliveryStreet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Delivery_ConfirmedAppointmentIndicator {
            get {
                return this.Delivery_ConfirmedAppointmentIndicatorField;
            }
            set {
                if ((this.Delivery_ConfirmedAppointmentIndicatorField.Equals(value) != true)) {
                    this.Delivery_ConfirmedAppointmentIndicatorField = value;
                    this.RaisePropertyChanged("Delivery_ConfirmedAppointmentIndicator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Delivery_EndDateTime {
            get {
                return this.Delivery_EndDateTimeField;
            }
            set {
                if ((this.Delivery_EndDateTimeField.Equals(value) != true)) {
                    this.Delivery_EndDateTimeField = value;
                    this.RaisePropertyChanged("Delivery_EndDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Delivery_ModifiedDateTime {
            get {
                return this.Delivery_ModifiedDateTimeField;
            }
            set {
                if ((this.Delivery_ModifiedDateTimeField.Equals(value) != true)) {
                    this.Delivery_ModifiedDateTimeField = value;
                    this.RaisePropertyChanged("Delivery_ModifiedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Delivery_StartDateTime {
            get {
                return this.Delivery_StartDateTimeField;
            }
            set {
                if ((this.Delivery_StartDateTimeField.Equals(value) != true)) {
                    this.Delivery_StartDateTimeField = value;
                    this.RaisePropertyChanged("Delivery_StartDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DlvState {
            get {
                return this.DlvStateField;
            }
            set {
                if ((object.ReferenceEquals(this.DlvStateField, value) != true)) {
                    this.DlvStateField = value;
                    this.RaisePropertyChanged("DlvState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DlvZipCode {
            get {
                return this.DlvZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DlvZipCodeField, value) != true)) {
                    this.DlvZipCodeField = value;
                    this.RaisePropertyChanged("DlvZipCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDateTime {
            get {
                return this.EndDateTimeField;
            }
            set {
                if ((this.EndDateTimeField.Equals(value) != true)) {
                    this.EndDateTimeField = value;
                    this.RaisePropertyChanged("EndDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MODIFIEDDATETIME {
            get {
                return this.MODIFIEDDATETIMEField;
            }
            set {
                if ((this.MODIFIEDDATETIMEField.Equals(value) != true)) {
                    this.MODIFIEDDATETIMEField = value;
                    this.RaisePropertyChanged("MODIFIEDDATETIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MXM1002SequenceNr {
            get {
                return this.MXM1002SequenceNrField;
            }
            set {
                if ((this.MXM1002SequenceNrField.Equals(value) != true)) {
                    this.MXM1002SequenceNrField = value;
                    this.RaisePropertyChanged("MXM1002SequenceNr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MXM1002TrfDate {
            get {
                return this.MXM1002TrfDateField;
            }
            set {
                if ((this.MXM1002TrfDateField.Equals(value) != true)) {
                    this.MXM1002TrfDateField = value;
                    this.RaisePropertyChanged("MXM1002TrfDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXMAlternativeContactMobileNo {
            get {
                return this.MXMAlternativeContactMobileNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MXMAlternativeContactMobileNoField, value) != true)) {
                    this.MXMAlternativeContactMobileNoField = value;
                    this.RaisePropertyChanged("MXMAlternativeContactMobileNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXMAlternativeContactName {
            get {
                return this.MXMAlternativeContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MXMAlternativeContactNameField, value) != true)) {
                    this.MXMAlternativeContactNameField = value;
                    this.RaisePropertyChanged("MXMAlternativeContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXMAlternativeContactTelNo {
            get {
                return this.MXMAlternativeContactTelNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MXMAlternativeContactTelNoField, value) != true)) {
                    this.MXMAlternativeContactTelNoField = value;
                    this.RaisePropertyChanged("MXMAlternativeContactTelNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MXMConfirmedAppointmentIndicator {
            get {
                return this.MXMConfirmedAppointmentIndicatorField;
            }
            set {
                if ((this.MXMConfirmedAppointmentIndicatorField.Equals(value) != true)) {
                    this.MXMConfirmedAppointmentIndicatorField = value;
                    this.RaisePropertyChanged("MXMConfirmedAppointmentIndicator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MXMContactBySMS {
            get {
                return this.MXMContactBySMSField;
            }
            set {
                if ((this.MXMContactBySMSField.Equals(value) != true)) {
                    this.MXMContactBySMSField = value;
                    this.RaisePropertyChanged("MXMContactBySMS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MXMDisabledAdaptionsRequired {
            get {
                return this.MXMDisabledAdaptionsRequiredField;
            }
            set {
                if ((this.MXMDisabledAdaptionsRequiredField.Equals(value) != true)) {
                    this.MXMDisabledAdaptionsRequiredField = value;
                    this.RaisePropertyChanged("MXMDisabledAdaptionsRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MXMDoorChoiceFormReceived {
            get {
                return this.MXMDoorChoiceFormReceivedField;
            }
            set {
                if ((this.MXMDoorChoiceFormReceivedField.Equals(value) != true)) {
                    this.MXMDoorChoiceFormReceivedField = value;
                    this.RaisePropertyChanged("MXMDoorChoiceFormReceived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MXMNextDaySMS {
            get {
                return this.MXMNextDaySMSField;
            }
            set {
                if ((this.MXMNextDaySMSField.Equals(value) != true)) {
                    this.MXMNextDaySMSField = value;
                    this.RaisePropertyChanged("MXMNextDaySMS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MXMPropertyType {
            get {
                return this.MXMPropertyTypeField;
            }
            set {
                if ((this.MXMPropertyTypeField.Equals(value) != true)) {
                    this.MXMPropertyTypeField = value;
                    this.RaisePropertyChanged("MXMPropertyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXMResidentMobileNo {
            get {
                return this.MXMResidentMobileNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MXMResidentMobileNoField, value) != true)) {
                    this.MXMResidentMobileNoField = value;
                    this.RaisePropertyChanged("MXMResidentMobileNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXMResidentName {
            get {
                return this.MXMResidentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MXMResidentNameField, value) != true)) {
                    this.MXMResidentNameField = value;
                    this.RaisePropertyChanged("MXMResidentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MXMSMSSent {
            get {
                return this.MXMSMSSentField;
            }
            set {
                if ((this.MXMSMSSentField.Equals(value) != true)) {
                    this.MXMSMSSentField = value;
                    this.RaisePropertyChanged("MXMSMSSent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXMSpecialResidentNote {
            get {
                return this.MXMSpecialResidentNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.MXMSpecialResidentNoteField, value) != true)) {
                    this.MXMSpecialResidentNoteField = value;
                    this.RaisePropertyChanged("MXMSpecialResidentNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MXMSurveyLetterSentDate01 {
            get {
                return this.MXMSurveyLetterSentDate01Field;
            }
            set {
                if ((this.MXMSurveyLetterSentDate01Field.Equals(value) != true)) {
                    this.MXMSurveyLetterSentDate01Field = value;
                    this.RaisePropertyChanged("MXMSurveyLetterSentDate01");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MXMSurveyLetterSentDate02 {
            get {
                return this.MXMSurveyLetterSentDate02Field;
            }
            set {
                if ((this.MXMSurveyLetterSentDate02Field.Equals(value) != true)) {
                    this.MXMSurveyLetterSentDate02Field = value;
                    this.RaisePropertyChanged("MXMSurveyLetterSentDate02");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MXMSurveyLetterSentDate03 {
            get {
                return this.MXMSurveyLetterSentDate03Field;
            }
            set {
                if ((this.MXMSurveyLetterSentDate03Field.Equals(value) != true)) {
                    this.MXMSurveyLetterSentDate03Field = value;
                    this.RaisePropertyChanged("MXMSurveyLetterSentDate03");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MXMSurveyletterRequired {
            get {
                return this.MXMSurveyletterRequiredField;
            }
            set {
                if ((this.MXMSurveyletterRequiredField.Equals(value) != true)) {
                    this.MXMSurveyletterRequiredField = value;
                    this.RaisePropertyChanged("MXMSurveyletterRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXMSurveyorName {
            get {
                return this.MXMSurveyorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MXMSurveyorNameField, value) != true)) {
                    this.MXMSurveyorNameField = value;
                    this.RaisePropertyChanged("MXMSurveyorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXMSurveyorPCTag {
            get {
                return this.MXMSurveyorPCTagField;
            }
            set {
                if ((object.ReferenceEquals(this.MXMSurveyorPCTagField, value) != true)) {
                    this.MXMSurveyorPCTagField = value;
                    this.RaisePropertyChanged("MXMSurveyorPCTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXMSurveyorProfile {
            get {
                return this.MXMSurveyorProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.MXMSurveyorProfileField, value) != true)) {
                    this.MXMSurveyorProfileField = value;
                    this.RaisePropertyChanged("MXMSurveyorProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXMTelephoneNo {
            get {
                return this.MXMTelephoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MXMTelephoneNoField, value) != true)) {
                    this.MXMTelephoneNoField = value;
                    this.RaisePropertyChanged("MXMTelephoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Mxm1002InstallStatus {
            get {
                return this.Mxm1002InstallStatusField;
            }
            set {
                if ((this.Mxm1002InstallStatusField.Equals(value) != true)) {
                    this.Mxm1002InstallStatusField = value;
                    this.RaisePropertyChanged("Mxm1002InstallStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Mxm1002ProgressStatus {
            get {
                return this.Mxm1002ProgressStatusField;
            }
            set {
                if ((this.Mxm1002ProgressStatusField.Equals(value) != true)) {
                    this.Mxm1002ProgressStatusField = value;
                    this.RaisePropertyChanged("Mxm1002ProgressStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MxmProjDescription {
            get {
                return this.MxmProjDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MxmProjDescriptionField, value) != true)) {
                    this.MxmProjDescriptionField = value;
                    this.RaisePropertyChanged("MxmProjDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.NoteDetails> Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentIDField, value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjId {
            get {
                return this.ProjIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjIdField, value) != true)) {
                    this.ProjIdField = value;
                    this.RaisePropertyChanged("ProjId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Purpose {
            get {
                return this.PurposeField;
            }
            set {
                if ((object.ReferenceEquals(this.PurposeField, value) != true)) {
                    this.PurposeField = value;
                    this.RaisePropertyChanged("Purpose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SMMActivities_MODIFIEDDATETIME {
            get {
                return this.SMMActivities_MODIFIEDDATETIMEField;
            }
            set {
                if ((this.SMMActivities_MODIFIEDDATETIMEField.Equals(value) != true)) {
                    this.SMMActivities_MODIFIEDDATETIMEField = value;
                    this.RaisePropertyChanged("SMMActivities_MODIFIEDDATETIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDateTime {
            get {
                return this.StartDateTimeField;
            }
            set {
                if ((this.StartDateTimeField.Equals(value) != true)) {
                    this.StartDateTimeField = value;
                    this.RaisePropertyChanged("StartDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UnitDetails> Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitsField, value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoteDetails", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial struct NoteDetails : System.ComponentModel.INotifyPropertyChanged {
        
        private long AXRecIDField;
        
        private int DeviceIDKeyField;
        
        private System.DateTime InputDateField;
        
        private string NoteTextField;
        
        private string NoteTypeField;
        
        private string ProjectNoField;
        
        private string PurposeField;
        
        private string UserNameField;
        
        private string UserProfileField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AXRecID {
            get {
                return this.AXRecIDField;
            }
            set {
                if ((this.AXRecIDField.Equals(value) != true)) {
                    this.AXRecIDField = value;
                    this.RaisePropertyChanged("AXRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceIDKey {
            get {
                return this.DeviceIDKeyField;
            }
            set {
                if ((this.DeviceIDKeyField.Equals(value) != true)) {
                    this.DeviceIDKeyField = value;
                    this.RaisePropertyChanged("DeviceIDKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InputDate {
            get {
                return this.InputDateField;
            }
            set {
                if ((this.InputDateField.Equals(value) != true)) {
                    this.InputDateField = value;
                    this.RaisePropertyChanged("InputDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteText {
            get {
                return this.NoteTextField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteTextField, value) != true)) {
                    this.NoteTextField = value;
                    this.RaisePropertyChanged("NoteText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteType {
            get {
                return this.NoteTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteTypeField, value) != true)) {
                    this.NoteTypeField = value;
                    this.RaisePropertyChanged("NoteType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectNo {
            get {
                return this.ProjectNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNoField, value) != true)) {
                    this.ProjectNoField = value;
                    this.RaisePropertyChanged("ProjectNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Purpose {
            get {
                return this.PurposeField;
            }
            set {
                if ((object.ReferenceEquals(this.PurposeField, value) != true)) {
                    this.PurposeField = value;
                    this.RaisePropertyChanged("Purpose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserProfile {
            get {
                return this.UserProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.UserProfileField, value) != true)) {
                    this.UserProfileField = value;
                    this.RaisePropertyChanged("UserProfile");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UploadFileChange", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial struct UploadFileChange : System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] byDataField;
        
        private string sCommentField;
        
        private string sFileNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] byData {
            get {
                return this.byDataField;
            }
            set {
                if ((object.ReferenceEquals(this.byDataField, value) != true)) {
                    this.byDataField = value;
                    this.RaisePropertyChanged("byData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sComment {
            get {
                return this.sCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.sCommentField, value) != true)) {
                    this.sCommentField = value;
                    this.RaisePropertyChanged("sComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sFileName {
            get {
                return this.sFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.sFileNameField, value) != true)) {
                    this.sFileNameField = value;
                    this.RaisePropertyChanged("sFileName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UploadChangesResult", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial class UploadChangesResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime ActivitiesTable_ModDateField;
        
        private System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.clsRealtimeNoteKeyValues> NoteValuesField;
        
        private System.DateTime ProjTable_ModDateField;
        
        private bool bSuccessfullField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActivitiesTable_ModDate {
            get {
                return this.ActivitiesTable_ModDateField;
            }
            set {
                if ((this.ActivitiesTable_ModDateField.Equals(value) != true)) {
                    this.ActivitiesTable_ModDateField = value;
                    this.RaisePropertyChanged("ActivitiesTable_ModDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.clsRealtimeNoteKeyValues> NoteValues {
            get {
                return this.NoteValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteValuesField, value) != true)) {
                    this.NoteValuesField = value;
                    this.RaisePropertyChanged("NoteValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ProjTable_ModDate {
            get {
                return this.ProjTable_ModDateField;
            }
            set {
                if ((this.ProjTable_ModDateField.Equals(value) != true)) {
                    this.ProjTable_ModDateField = value;
                    this.RaisePropertyChanged("ProjTable_ModDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bSuccessfull {
            get {
                return this.bSuccessfullField;
            }
            set {
                if ((this.bSuccessfullField.Equals(value) != true)) {
                    this.bSuccessfullField = value;
                    this.RaisePropertyChanged("bSuccessfull");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="cAXData.UploadDataChange", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_CLASS")]
    public partial struct cAXDataUploadDataChange : System.ComponentModel.INotifyPropertyChanged {
        
        private string FieldNameField;
        
        private string FieldValueField;
        
        private string ProjectNoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldValue {
            get {
                return this.FieldValueField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldValueField, value) != true)) {
                    this.FieldValueField = value;
                    this.RaisePropertyChanged("FieldValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectNo {
            get {
                return this.ProjectNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNoField, value) != true)) {
                    this.ProjectNoField = value;
                    this.RaisePropertyChanged("ProjectNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubProjectFileDownloadResult", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial class SubProjectFileDownloadResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime FileLastModDateField;
        
        private bool bFileFoundField;
        
        private bool bSuccessfullField;
        
        private byte[] byFileDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FileLastModDate {
            get {
                return this.FileLastModDateField;
            }
            set {
                if ((this.FileLastModDateField.Equals(value) != true)) {
                    this.FileLastModDateField = value;
                    this.RaisePropertyChanged("FileLastModDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bFileFound {
            get {
                return this.bFileFoundField;
            }
            set {
                if ((this.bFileFoundField.Equals(value) != true)) {
                    this.bFileFoundField = value;
                    this.RaisePropertyChanged("bFileFound");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bSuccessfull {
            get {
                return this.bSuccessfullField;
            }
            set {
                if ((this.bSuccessfullField.Equals(value) != true)) {
                    this.bSuccessfullField = value;
                    this.RaisePropertyChanged("bSuccessfull");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] byFileData {
            get {
                return this.byFileDataField;
            }
            set {
                if ((object.ReferenceEquals(this.byFileDataField, value) != true)) {
                    this.byFileDataField = value;
                    this.RaisePropertyChanged("byFileData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubProjectFilesResult", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial class SubProjectFilesResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool bSuccessfullField;
        
        private System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SubProjectFile> pdSubProjectFilesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bSuccessfull {
            get {
                return this.bSuccessfullField;
            }
            set {
                if ((this.bSuccessfullField.Equals(value) != true)) {
                    this.bSuccessfullField = value;
                    this.RaisePropertyChanged("bSuccessfull");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SubProjectFile> pdSubProjectFiles {
            get {
                return this.pdSubProjectFilesField;
            }
            set {
                if ((object.ReferenceEquals(this.pdSubProjectFilesField, value) != true)) {
                    this.pdSubProjectFilesField = value;
                    this.RaisePropertyChanged("pdSubProjectFiles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubProjectDataResult", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial class SubProjectDataResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool bSuccessfullField;
        
        private ABP.ServiceExt.SubProjectData pdSubProjectDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bSuccessfull {
            get {
                return this.bSuccessfullField;
            }
            set {
                if ((this.bSuccessfullField.Equals(value) != true)) {
                    this.bSuccessfullField = value;
                    this.RaisePropertyChanged("bSuccessfull");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ABP.ServiceExt.SubProjectData pdSubProjectData {
            get {
                return this.pdSubProjectDataField;
            }
            set {
                if ((this.pdSubProjectDataField.Equals(value) != true)) {
                    this.pdSubProjectDataField = value;
                    this.RaisePropertyChanged("pdSubProjectData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubProjectsListResult", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial class SubProjectsListResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<string> SubProjectsField;
        
        private bool bSuccessfullField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> SubProjects {
            get {
                return this.SubProjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.SubProjectsField, value) != true)) {
                    this.SubProjectsField = value;
                    this.RaisePropertyChanged("SubProjects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bSuccessfull {
            get {
                return this.bSuccessfullField;
            }
            set {
                if ((this.bSuccessfullField.Equals(value) != true)) {
                    this.bSuccessfullField = value;
                    this.RaisePropertyChanged("bSuccessfull");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEnumField", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial struct BaseEnumField : System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.BaseEnumValue> BaseEnumsField;
        
        private string FieldNameField;
        
        private System.DateTime LastUpdateField;
        
        private string TableNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.BaseEnumValue> BaseEnums {
            get {
                return this.BaseEnumsField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseEnumsField, value) != true)) {
                    this.BaseEnumsField = value;
                    this.RaisePropertyChanged("BaseEnums");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdate {
            get {
                return this.LastUpdateField;
            }
            set {
                if ((this.LastUpdateField.Equals(value) != true)) {
                    this.LastUpdateField = value;
                    this.RaisePropertyChanged("LastUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEnumValue", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial struct BaseEnumValue : System.ComponentModel.INotifyPropertyChanged {
        
        private string BaseNameField;
        
        private int BaseValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseName {
            get {
                return this.BaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseNameField, value) != true)) {
                    this.BaseNameField = value;
                    this.RaisePropertyChanged("BaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BaseValue {
            get {
                return this.BaseValueField;
            }
            set {
                if ((this.BaseValueField.Equals(value) != true)) {
                    this.BaseValueField = value;
                    this.RaisePropertyChanged("BaseValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEnumResult", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial class BaseEnumResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.BaseEnumField> BaseEnumResultsField;
        
        private bool bSuccessfullField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.BaseEnumField> BaseEnumResults {
            get {
                return this.BaseEnumResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseEnumResultsField, value) != true)) {
                    this.BaseEnumResultsField = value;
                    this.RaisePropertyChanged("BaseEnumResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bSuccessfull {
            get {
                return this.bSuccessfullField;
            }
            set {
                if ((this.bSuccessfullField.Equals(value) != true)) {
                    this.bSuccessfullField = value;
                    this.RaisePropertyChanged("bSuccessfull");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectValidationResult", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial class ProjectValidationResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ABP.ServiceExt.SearchResult ValidationResultField;
        
        private bool bProjectFoundField;
        
        private bool bSuccessfullField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ABP.ServiceExt.SearchResult ValidationResult {
            get {
                return this.ValidationResultField;
            }
            set {
                if ((this.ValidationResultField.Equals(value) != true)) {
                    this.ValidationResultField = value;
                    this.RaisePropertyChanged("ValidationResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bProjectFound {
            get {
                return this.bProjectFoundField;
            }
            set {
                if ((this.bProjectFoundField.Equals(value) != true)) {
                    this.bProjectFoundField = value;
                    this.RaisePropertyChanged("bProjectFound");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bSuccessfull {
            get {
                return this.bSuccessfullField;
            }
            set {
                if ((this.bSuccessfullField.Equals(value) != true)) {
                    this.bSuccessfullField = value;
                    this.RaisePropertyChanged("bSuccessfull");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FetchSurveyFailedReasonsResult", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial class FetchSurveyFailedReasonsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime bLastUpdateDateField;
        
        private bool bSuccessfullField;
        
        private System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SurveyFailedReason> sfrReasonsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime bLastUpdateDate {
            get {
                return this.bLastUpdateDateField;
            }
            set {
                if ((this.bLastUpdateDateField.Equals(value) != true)) {
                    this.bLastUpdateDateField = value;
                    this.RaisePropertyChanged("bLastUpdateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bSuccessfull {
            get {
                return this.bSuccessfullField;
            }
            set {
                if ((this.bSuccessfullField.Equals(value) != true)) {
                    this.bSuccessfullField = value;
                    this.RaisePropertyChanged("bSuccessfull");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SurveyFailedReason> sfrReasons {
            get {
                return this.sfrReasonsField;
            }
            set {
                if ((object.ReferenceEquals(this.sfrReasonsField, value) != true)) {
                    this.sfrReasonsField = value;
                    this.RaisePropertyChanged("sfrReasons");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SurveyFailedReason", Namespace="http://schemas.datacontract.org/2004/07/ANG_ABP_AX_WCF")]
    public partial struct SurveyFailedReason : System.ComponentModel.INotifyPropertyChanged {
        
        private bool bMandatoryNoteField;
        
        private int iDisplayOrderField;
        
        private int iProgressStatusField;
        
        private string sReasonField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bMandatoryNote {
            get {
                return this.bMandatoryNoteField;
            }
            set {
                if ((this.bMandatoryNoteField.Equals(value) != true)) {
                    this.bMandatoryNoteField = value;
                    this.RaisePropertyChanged("bMandatoryNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int iDisplayOrder {
            get {
                return this.iDisplayOrderField;
            }
            set {
                if ((this.iDisplayOrderField.Equals(value) != true)) {
                    this.iDisplayOrderField = value;
                    this.RaisePropertyChanged("iDisplayOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int iProgressStatus {
            get {
                return this.iProgressStatusField;
            }
            set {
                if ((this.iProgressStatusField.Equals(value) != true)) {
                    this.iProgressStatusField = value;
                    this.RaisePropertyChanged("iProgressStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sReason {
            get {
                return this.sReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.sReasonField, value) != true)) {
                    this.sReasonField = value;
                    this.RaisePropertyChanged("sReason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceExt.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/UploadUnitInstallationStatus", ReplyAction="http://tempuri.org/IService/UploadUnitInstallationStatusResponse")]
        System.IAsyncResult BeginUploadUnitInstallationStatus(string v_sCompanyName, string v_sSubProjectNo, string v_sUserProfile, string v_sMachineName, System.DateTime v_dInstallationDate, string v_sInstallationTeam, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UnitDetails> v_udUnits, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState);
        
        ABP.ServiceExt.UploadUnitsResult EndUploadUnitInstallationStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/CheckForSubProjectsUnitDataChanges", ReplyAction="http://tempuri.org/IService/CheckForSubProjectsUnitDataChangesResponse")]
        System.IAsyncResult BeginCheckForSubProjectsUnitDataChanges(string v_sCompanyName, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UnitDetails> v_udUnits, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState);
        
        ABP.ServiceExt.CheckUnitChangesResult EndCheckForSubProjectsUnitDataChanges(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/FetchInstallersProjectsList", ReplyAction="http://tempuri.org/IService/FetchInstallersProjectsListResponse")]
        System.IAsyncResult BeginFetchInstallersProjectsList(string v_sCompanyName, string v_sInstallerUserProfile, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState);
        
        ABP.ServiceExt.ProjectSearchResult EndFetchInstallersProjectsList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/FetchInstallersList", ReplyAction="http://tempuri.org/IService/FetchInstallersListResponse")]
        System.IAsyncResult BeginFetchInstallersList(string v_sCompanyName, System.DateTime v_dLastUpdateDate, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState);
        
        ABP.ServiceExt.FetchInstallersResult EndFetchInstallersList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/CheckForUpdatedSettings", ReplyAction="http://tempuri.org/IService/CheckForUpdatedSettingsResponse")]
        System.IAsyncResult BeginCheckForUpdatedSettings(string v_sCompanyName, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SettingDetails> v_svSettings, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState);
        
        ABP.ServiceExt.SettingsCheckResult EndCheckForUpdatedSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/ReturnAreSystemsAvailable", ReplyAction="http://tempuri.org/IService/ReturnAreSystemsAvailableResponse")]
        System.IAsyncResult BeginReturnAreSystemsAvailable(string v_sCompanyName, string v_sUserProfile, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState);
        
        ABP.ServiceExt.SystemsAvailableResult EndReturnAreSystemsAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/ReturnSubProjectFileChanges", ReplyAction="http://tempuri.org/IService/ReturnSubProjectFileChangesResponse")]
        System.IAsyncResult BeginReturnSubProjectFileChanges(string v_sCompanyName, string v_sProjectNo, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SubProjectFileDetail> v_fdFiles, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState);
        
        ABP.ServiceExt.FileChangesResult EndReturnSubProjectFileChanges(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/CheckForDataDownloadChanges", ReplyAction="http://tempuri.org/IService/CheckForDataDownloadChangesResponse")]
        System.IAsyncResult BeginCheckForDataDownloadChanges(string v_sCompanyName, string v_sPurpose, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.DownloadDataChange> v_cSubProjects, bool v_bCheckForNewSubProjects, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState);
        
        ABP.ServiceExt.DownloadDataChangesResult EndCheckForDataDownloadChanges(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/UploadFileChanges", ReplyAction="http://tempuri.org/IService/UploadFileChangesResponse")]
        System.IAsyncResult BeginUploadFileChanges(string v_sCompanyName, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UploadFileChange> v_cChanges, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState);
        
        ABP.ServiceExt.UploadChangesResult EndUploadFileChanges(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/UploadSubProjectFiles", ReplyAction="http://tempuri.org/IService/UploadSubProjectFilesResponse")]
        System.IAsyncResult BeginUploadSubProjectFiles(string v_sCompanyName, string v_sSubProjectNo, string v_sUserName, string v_sMachineName, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UploadFileChange> v_cChanges, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState);
        
        ABP.ServiceExt.UploadChangesResult EndUploadSubProjectFiles(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/UploadSubProjectDataChanges", ReplyAction="http://tempuri.org/IService/UploadSubProjectDataChangesResponse")]
        System.IAsyncResult BeginUploadSubProjectDataChanges(string v_sCompanyName, string v_sPurpose, string v_sUserName, string v_sMachineName, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.cAXDataUploadDataChange> v_cChanges, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState);
        
        ABP.ServiceExt.UploadChangesResult EndUploadSubProjectDataChanges(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/UploadSubProjectNotesChanges", ReplyAction="http://tempuri.org/IService/UploadSubProjectNotesChangesResponse")]
        System.IAsyncResult BeginUploadSubProjectNotesChanges(string v_sCompanyName, string v_sPurpose, string v_sUserName, string v_sMachineName, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.NoteDetails> v_cNotes, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState);
        
        ABP.ServiceExt.UploadChangesResult EndUploadSubProjectNotesChanges(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/ReturnSubProjectFileDownload", ReplyAction="http://tempuri.org/IService/ReturnSubProjectFileDownloadResponse")]
        System.IAsyncResult BeginReturnSubProjectFileDownload(string v_sFileName, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState);
        
        ABP.ServiceExt.SubProjectFileDownloadResult EndReturnSubProjectFileDownload(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/ReturnSubProjectFiles", ReplyAction="http://tempuri.org/IService/ReturnSubProjectFilesResponse")]
        System.IAsyncResult BeginReturnSubProjectFiles(string v_sCompanyName, string v_sProjectNo, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState);
        
        ABP.ServiceExt.SubProjectFilesResult EndReturnSubProjectFiles(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/ReturnSubProjectData", ReplyAction="http://tempuri.org/IService/ReturnSubProjectDataResponse")]
        System.IAsyncResult BeginReturnSubProjectData(string v_sCompanyName, string v_sProjectNo, string v_sPurpose, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState);
        
        ABP.ServiceExt.SubProjectDataResult EndReturnSubProjectData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/ReturnSubProjectsList", ReplyAction="http://tempuri.org/IService/ReturnSubProjectsListResponse")]
        System.IAsyncResult BeginReturnSubProjectsList(string v_sCompanyName, string v_sProjectNo, string v_sPurpose, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState);
        
        ABP.ServiceExt.SubProjectsListResult EndReturnSubProjectsList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/ReturnBaseEnums", ReplyAction="http://tempuri.org/IService/ReturnBaseEnumsResponse")]
        System.IAsyncResult BeginReturnBaseEnums(string v_sCompanyName, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.BaseEnumField> v_beFields, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState);
        
        ABP.ServiceExt.BaseEnumResult EndReturnBaseEnums(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/SearchForContract", ReplyAction="http://tempuri.org/IService/SearchForContractResponse")]
        System.IAsyncResult BeginSearchForContract(string v_sCompanyName, string v_sProjectName, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState);
        
        ABP.ServiceExt.ProjectSearchResult EndSearchForContract(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/ValidateProject", ReplyAction="http://tempuri.org/IService/ValidateProjectResponse")]
        System.IAsyncResult BeginValidateProject(string v_sCompanyName, string v_sProjectNo, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState);
        
        ABP.ServiceExt.ProjectValidationResult EndValidateProject(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/FetchFailedSurveyReasons", ReplyAction="http://tempuri.org/IService/FetchFailedSurveyReasonsResponse")]
        System.IAsyncResult BeginFetchFailedSurveyReasons(string v_sCompanyName, System.DateTime v_dLastUpdateDate, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState);
        
        ABP.ServiceExt.FetchSurveyFailedReasonsResult EndFetchFailedSurveyReasons(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : ABP.ServiceExt.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadUnitInstallationStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadUnitInstallationStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ABP.ServiceExt.UploadUnitsResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ABP.ServiceExt.UploadUnitsResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckForSubProjectsUnitDataChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckForSubProjectsUnitDataChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ABP.ServiceExt.CheckUnitChangesResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ABP.ServiceExt.CheckUnitChangesResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FetchInstallersProjectsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FetchInstallersProjectsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ABP.ServiceExt.ProjectSearchResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ABP.ServiceExt.ProjectSearchResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FetchInstallersListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FetchInstallersListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ABP.ServiceExt.FetchInstallersResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ABP.ServiceExt.FetchInstallersResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckForUpdatedSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckForUpdatedSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ABP.ServiceExt.SettingsCheckResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ABP.ServiceExt.SettingsCheckResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReturnAreSystemsAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReturnAreSystemsAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ABP.ServiceExt.SystemsAvailableResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ABP.ServiceExt.SystemsAvailableResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReturnSubProjectFileChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReturnSubProjectFileChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ABP.ServiceExt.FileChangesResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ABP.ServiceExt.FileChangesResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckForDataDownloadChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckForDataDownloadChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ABP.ServiceExt.DownloadDataChangesResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ABP.ServiceExt.DownloadDataChangesResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadFileChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadFileChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ABP.ServiceExt.UploadChangesResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ABP.ServiceExt.UploadChangesResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadSubProjectFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadSubProjectFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ABP.ServiceExt.UploadChangesResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ABP.ServiceExt.UploadChangesResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadSubProjectDataChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadSubProjectDataChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ABP.ServiceExt.UploadChangesResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ABP.ServiceExt.UploadChangesResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadSubProjectNotesChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadSubProjectNotesChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ABP.ServiceExt.UploadChangesResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ABP.ServiceExt.UploadChangesResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReturnSubProjectFileDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReturnSubProjectFileDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ABP.ServiceExt.SubProjectFileDownloadResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ABP.ServiceExt.SubProjectFileDownloadResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReturnSubProjectFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReturnSubProjectFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ABP.ServiceExt.SubProjectFilesResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ABP.ServiceExt.SubProjectFilesResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReturnSubProjectDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReturnSubProjectDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ABP.ServiceExt.SubProjectDataResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ABP.ServiceExt.SubProjectDataResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReturnSubProjectsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReturnSubProjectsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ABP.ServiceExt.SubProjectsListResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ABP.ServiceExt.SubProjectsListResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReturnBaseEnumsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReturnBaseEnumsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ABP.ServiceExt.BaseEnumResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ABP.ServiceExt.BaseEnumResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchForContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchForContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ABP.ServiceExt.ProjectSearchResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ABP.ServiceExt.ProjectSearchResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ABP.ServiceExt.ProjectValidationResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ABP.ServiceExt.ProjectValidationResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FetchFailedSurveyReasonsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FetchFailedSurveyReasonsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ABP.ServiceExt.FetchSurveyFailedReasonsResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ABP.ServiceExt.FetchSurveyFailedReasonsResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<ABP.ServiceExt.IService>, ABP.ServiceExt.IService {
        
        private BeginOperationDelegate onBeginUploadUnitInstallationStatusDelegate;
        
        private EndOperationDelegate onEndUploadUnitInstallationStatusDelegate;
        
        private System.Threading.SendOrPostCallback onUploadUnitInstallationStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckForSubProjectsUnitDataChangesDelegate;
        
        private EndOperationDelegate onEndCheckForSubProjectsUnitDataChangesDelegate;
        
        private System.Threading.SendOrPostCallback onCheckForSubProjectsUnitDataChangesCompletedDelegate;
        
        private BeginOperationDelegate onBeginFetchInstallersProjectsListDelegate;
        
        private EndOperationDelegate onEndFetchInstallersProjectsListDelegate;
        
        private System.Threading.SendOrPostCallback onFetchInstallersProjectsListCompletedDelegate;
        
        private BeginOperationDelegate onBeginFetchInstallersListDelegate;
        
        private EndOperationDelegate onEndFetchInstallersListDelegate;
        
        private System.Threading.SendOrPostCallback onFetchInstallersListCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckForUpdatedSettingsDelegate;
        
        private EndOperationDelegate onEndCheckForUpdatedSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onCheckForUpdatedSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginReturnAreSystemsAvailableDelegate;
        
        private EndOperationDelegate onEndReturnAreSystemsAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onReturnAreSystemsAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginReturnSubProjectFileChangesDelegate;
        
        private EndOperationDelegate onEndReturnSubProjectFileChangesDelegate;
        
        private System.Threading.SendOrPostCallback onReturnSubProjectFileChangesCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckForDataDownloadChangesDelegate;
        
        private EndOperationDelegate onEndCheckForDataDownloadChangesDelegate;
        
        private System.Threading.SendOrPostCallback onCheckForDataDownloadChangesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadFileChangesDelegate;
        
        private EndOperationDelegate onEndUploadFileChangesDelegate;
        
        private System.Threading.SendOrPostCallback onUploadFileChangesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadSubProjectFilesDelegate;
        
        private EndOperationDelegate onEndUploadSubProjectFilesDelegate;
        
        private System.Threading.SendOrPostCallback onUploadSubProjectFilesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadSubProjectDataChangesDelegate;
        
        private EndOperationDelegate onEndUploadSubProjectDataChangesDelegate;
        
        private System.Threading.SendOrPostCallback onUploadSubProjectDataChangesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadSubProjectNotesChangesDelegate;
        
        private EndOperationDelegate onEndUploadSubProjectNotesChangesDelegate;
        
        private System.Threading.SendOrPostCallback onUploadSubProjectNotesChangesCompletedDelegate;
        
        private BeginOperationDelegate onBeginReturnSubProjectFileDownloadDelegate;
        
        private EndOperationDelegate onEndReturnSubProjectFileDownloadDelegate;
        
        private System.Threading.SendOrPostCallback onReturnSubProjectFileDownloadCompletedDelegate;
        
        private BeginOperationDelegate onBeginReturnSubProjectFilesDelegate;
        
        private EndOperationDelegate onEndReturnSubProjectFilesDelegate;
        
        private System.Threading.SendOrPostCallback onReturnSubProjectFilesCompletedDelegate;
        
        private BeginOperationDelegate onBeginReturnSubProjectDataDelegate;
        
        private EndOperationDelegate onEndReturnSubProjectDataDelegate;
        
        private System.Threading.SendOrPostCallback onReturnSubProjectDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginReturnSubProjectsListDelegate;
        
        private EndOperationDelegate onEndReturnSubProjectsListDelegate;
        
        private System.Threading.SendOrPostCallback onReturnSubProjectsListCompletedDelegate;
        
        private BeginOperationDelegate onBeginReturnBaseEnumsDelegate;
        
        private EndOperationDelegate onEndReturnBaseEnumsDelegate;
        
        private System.Threading.SendOrPostCallback onReturnBaseEnumsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchForContractDelegate;
        
        private EndOperationDelegate onEndSearchForContractDelegate;
        
        private System.Threading.SendOrPostCallback onSearchForContractCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateProjectDelegate;
        
        private EndOperationDelegate onEndValidateProjectDelegate;
        
        private System.Threading.SendOrPostCallback onValidateProjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginFetchFailedSurveyReasonsDelegate;
        
        private EndOperationDelegate onEndFetchFailedSurveyReasonsDelegate;
        
        private System.Threading.SendOrPostCallback onFetchFailedSurveyReasonsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ServiceClient() : 
                base(ServiceClient.GetDefaultBinding(), ServiceClient.GetDefaultEndpointAddress()) {
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), ServiceClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<UploadUnitInstallationStatusCompletedEventArgs> UploadUnitInstallationStatusCompleted;
        
        public event System.EventHandler<CheckForSubProjectsUnitDataChangesCompletedEventArgs> CheckForSubProjectsUnitDataChangesCompleted;
        
        public event System.EventHandler<FetchInstallersProjectsListCompletedEventArgs> FetchInstallersProjectsListCompleted;
        
        public event System.EventHandler<FetchInstallersListCompletedEventArgs> FetchInstallersListCompleted;
        
        public event System.EventHandler<CheckForUpdatedSettingsCompletedEventArgs> CheckForUpdatedSettingsCompleted;
        
        public event System.EventHandler<ReturnAreSystemsAvailableCompletedEventArgs> ReturnAreSystemsAvailableCompleted;
        
        public event System.EventHandler<ReturnSubProjectFileChangesCompletedEventArgs> ReturnSubProjectFileChangesCompleted;
        
        public event System.EventHandler<CheckForDataDownloadChangesCompletedEventArgs> CheckForDataDownloadChangesCompleted;
        
        public event System.EventHandler<UploadFileChangesCompletedEventArgs> UploadFileChangesCompleted;
        
        public event System.EventHandler<UploadSubProjectFilesCompletedEventArgs> UploadSubProjectFilesCompleted;
        
        public event System.EventHandler<UploadSubProjectDataChangesCompletedEventArgs> UploadSubProjectDataChangesCompleted;
        
        public event System.EventHandler<UploadSubProjectNotesChangesCompletedEventArgs> UploadSubProjectNotesChangesCompleted;
        
        public event System.EventHandler<ReturnSubProjectFileDownloadCompletedEventArgs> ReturnSubProjectFileDownloadCompleted;
        
        public event System.EventHandler<ReturnSubProjectFilesCompletedEventArgs> ReturnSubProjectFilesCompleted;
        
        public event System.EventHandler<ReturnSubProjectDataCompletedEventArgs> ReturnSubProjectDataCompleted;
        
        public event System.EventHandler<ReturnSubProjectsListCompletedEventArgs> ReturnSubProjectsListCompleted;
        
        public event System.EventHandler<ReturnBaseEnumsCompletedEventArgs> ReturnBaseEnumsCompleted;
        
        public event System.EventHandler<SearchForContractCompletedEventArgs> SearchForContractCompleted;
        
        public event System.EventHandler<ValidateProjectCompletedEventArgs> ValidateProjectCompleted;
        
        public event System.EventHandler<FetchFailedSurveyReasonsCompletedEventArgs> FetchFailedSurveyReasonsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ABP.ServiceExt.IService.BeginUploadUnitInstallationStatus(string v_sCompanyName, string v_sSubProjectNo, string v_sUserProfile, string v_sMachineName, System.DateTime v_dInstallationDate, string v_sInstallationTeam, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UnitDetails> v_udUnits, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadUnitInstallationStatus(v_sCompanyName, v_sSubProjectNo, v_sUserProfile, v_sMachineName, v_dInstallationDate, v_sInstallationTeam, v_udUnits, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ABP.ServiceExt.UploadUnitsResult ABP.ServiceExt.IService.EndUploadUnitInstallationStatus(System.IAsyncResult result) {
            return base.Channel.EndUploadUnitInstallationStatus(result);
        }
        
        private System.IAsyncResult OnBeginUploadUnitInstallationStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_sCompanyName = ((string)(inValues[0]));
            string v_sSubProjectNo = ((string)(inValues[1]));
            string v_sUserProfile = ((string)(inValues[2]));
            string v_sMachineName = ((string)(inValues[3]));
            System.DateTime v_dInstallationDate = ((System.DateTime)(inValues[4]));
            string v_sInstallationTeam = ((string)(inValues[5]));
            System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UnitDetails> v_udUnits = ((System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UnitDetails>)(inValues[6]));
            string v_sAuthID = ((string)(inValues[7]));
            string v_sToken = ((string)(inValues[8]));
            return ((ABP.ServiceExt.IService)(this)).BeginUploadUnitInstallationStatus(v_sCompanyName, v_sSubProjectNo, v_sUserProfile, v_sMachineName, v_dInstallationDate, v_sInstallationTeam, v_udUnits, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        private object[] OnEndUploadUnitInstallationStatus(System.IAsyncResult result) {
            ABP.ServiceExt.UploadUnitsResult retVal = ((ABP.ServiceExt.IService)(this)).EndUploadUnitInstallationStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadUnitInstallationStatusCompleted(object state) {
            if ((this.UploadUnitInstallationStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadUnitInstallationStatusCompleted(this, new UploadUnitInstallationStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadUnitInstallationStatusAsync(string v_sCompanyName, string v_sSubProjectNo, string v_sUserProfile, string v_sMachineName, System.DateTime v_dInstallationDate, string v_sInstallationTeam, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UnitDetails> v_udUnits, string v_sAuthID, string v_sToken) {
            this.UploadUnitInstallationStatusAsync(v_sCompanyName, v_sSubProjectNo, v_sUserProfile, v_sMachineName, v_dInstallationDate, v_sInstallationTeam, v_udUnits, v_sAuthID, v_sToken, null);
        }
        
        public void UploadUnitInstallationStatusAsync(string v_sCompanyName, string v_sSubProjectNo, string v_sUserProfile, string v_sMachineName, System.DateTime v_dInstallationDate, string v_sInstallationTeam, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UnitDetails> v_udUnits, string v_sAuthID, string v_sToken, object userState) {
            if ((this.onBeginUploadUnitInstallationStatusDelegate == null)) {
                this.onBeginUploadUnitInstallationStatusDelegate = new BeginOperationDelegate(this.OnBeginUploadUnitInstallationStatus);
            }
            if ((this.onEndUploadUnitInstallationStatusDelegate == null)) {
                this.onEndUploadUnitInstallationStatusDelegate = new EndOperationDelegate(this.OnEndUploadUnitInstallationStatus);
            }
            if ((this.onUploadUnitInstallationStatusCompletedDelegate == null)) {
                this.onUploadUnitInstallationStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadUnitInstallationStatusCompleted);
            }
            base.InvokeAsync(this.onBeginUploadUnitInstallationStatusDelegate, new object[] {
                        v_sCompanyName,
                        v_sSubProjectNo,
                        v_sUserProfile,
                        v_sMachineName,
                        v_dInstallationDate,
                        v_sInstallationTeam,
                        v_udUnits,
                        v_sAuthID,
                        v_sToken}, this.onEndUploadUnitInstallationStatusDelegate, this.onUploadUnitInstallationStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ABP.ServiceExt.IService.BeginCheckForSubProjectsUnitDataChanges(string v_sCompanyName, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UnitDetails> v_udUnits, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckForSubProjectsUnitDataChanges(v_sCompanyName, v_sSubProjectNo, v_udUnits, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ABP.ServiceExt.CheckUnitChangesResult ABP.ServiceExt.IService.EndCheckForSubProjectsUnitDataChanges(System.IAsyncResult result) {
            return base.Channel.EndCheckForSubProjectsUnitDataChanges(result);
        }
        
        private System.IAsyncResult OnBeginCheckForSubProjectsUnitDataChanges(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_sCompanyName = ((string)(inValues[0]));
            string v_sSubProjectNo = ((string)(inValues[1]));
            System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UnitDetails> v_udUnits = ((System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UnitDetails>)(inValues[2]));
            string v_sAuthID = ((string)(inValues[3]));
            string v_sToken = ((string)(inValues[4]));
            return ((ABP.ServiceExt.IService)(this)).BeginCheckForSubProjectsUnitDataChanges(v_sCompanyName, v_sSubProjectNo, v_udUnits, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        private object[] OnEndCheckForSubProjectsUnitDataChanges(System.IAsyncResult result) {
            ABP.ServiceExt.CheckUnitChangesResult retVal = ((ABP.ServiceExt.IService)(this)).EndCheckForSubProjectsUnitDataChanges(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckForSubProjectsUnitDataChangesCompleted(object state) {
            if ((this.CheckForSubProjectsUnitDataChangesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckForSubProjectsUnitDataChangesCompleted(this, new CheckForSubProjectsUnitDataChangesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckForSubProjectsUnitDataChangesAsync(string v_sCompanyName, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UnitDetails> v_udUnits, string v_sAuthID, string v_sToken) {
            this.CheckForSubProjectsUnitDataChangesAsync(v_sCompanyName, v_sSubProjectNo, v_udUnits, v_sAuthID, v_sToken, null);
        }
        
        public void CheckForSubProjectsUnitDataChangesAsync(string v_sCompanyName, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UnitDetails> v_udUnits, string v_sAuthID, string v_sToken, object userState) {
            if ((this.onBeginCheckForSubProjectsUnitDataChangesDelegate == null)) {
                this.onBeginCheckForSubProjectsUnitDataChangesDelegate = new BeginOperationDelegate(this.OnBeginCheckForSubProjectsUnitDataChanges);
            }
            if ((this.onEndCheckForSubProjectsUnitDataChangesDelegate == null)) {
                this.onEndCheckForSubProjectsUnitDataChangesDelegate = new EndOperationDelegate(this.OnEndCheckForSubProjectsUnitDataChanges);
            }
            if ((this.onCheckForSubProjectsUnitDataChangesCompletedDelegate == null)) {
                this.onCheckForSubProjectsUnitDataChangesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckForSubProjectsUnitDataChangesCompleted);
            }
            base.InvokeAsync(this.onBeginCheckForSubProjectsUnitDataChangesDelegate, new object[] {
                        v_sCompanyName,
                        v_sSubProjectNo,
                        v_udUnits,
                        v_sAuthID,
                        v_sToken}, this.onEndCheckForSubProjectsUnitDataChangesDelegate, this.onCheckForSubProjectsUnitDataChangesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ABP.ServiceExt.IService.BeginFetchInstallersProjectsList(string v_sCompanyName, string v_sInstallerUserProfile, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFetchInstallersProjectsList(v_sCompanyName, v_sInstallerUserProfile, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ABP.ServiceExt.ProjectSearchResult ABP.ServiceExt.IService.EndFetchInstallersProjectsList(System.IAsyncResult result) {
            return base.Channel.EndFetchInstallersProjectsList(result);
        }
        
        private System.IAsyncResult OnBeginFetchInstallersProjectsList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_sCompanyName = ((string)(inValues[0]));
            string v_sInstallerUserProfile = ((string)(inValues[1]));
            string v_sAuthID = ((string)(inValues[2]));
            string v_sToken = ((string)(inValues[3]));
            return ((ABP.ServiceExt.IService)(this)).BeginFetchInstallersProjectsList(v_sCompanyName, v_sInstallerUserProfile, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        private object[] OnEndFetchInstallersProjectsList(System.IAsyncResult result) {
            ABP.ServiceExt.ProjectSearchResult retVal = ((ABP.ServiceExt.IService)(this)).EndFetchInstallersProjectsList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFetchInstallersProjectsListCompleted(object state) {
            if ((this.FetchInstallersProjectsListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FetchInstallersProjectsListCompleted(this, new FetchInstallersProjectsListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FetchInstallersProjectsListAsync(string v_sCompanyName, string v_sInstallerUserProfile, string v_sAuthID, string v_sToken) {
            this.FetchInstallersProjectsListAsync(v_sCompanyName, v_sInstallerUserProfile, v_sAuthID, v_sToken, null);
        }
        
        public void FetchInstallersProjectsListAsync(string v_sCompanyName, string v_sInstallerUserProfile, string v_sAuthID, string v_sToken, object userState) {
            if ((this.onBeginFetchInstallersProjectsListDelegate == null)) {
                this.onBeginFetchInstallersProjectsListDelegate = new BeginOperationDelegate(this.OnBeginFetchInstallersProjectsList);
            }
            if ((this.onEndFetchInstallersProjectsListDelegate == null)) {
                this.onEndFetchInstallersProjectsListDelegate = new EndOperationDelegate(this.OnEndFetchInstallersProjectsList);
            }
            if ((this.onFetchInstallersProjectsListCompletedDelegate == null)) {
                this.onFetchInstallersProjectsListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFetchInstallersProjectsListCompleted);
            }
            base.InvokeAsync(this.onBeginFetchInstallersProjectsListDelegate, new object[] {
                        v_sCompanyName,
                        v_sInstallerUserProfile,
                        v_sAuthID,
                        v_sToken}, this.onEndFetchInstallersProjectsListDelegate, this.onFetchInstallersProjectsListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ABP.ServiceExt.IService.BeginFetchInstallersList(string v_sCompanyName, System.DateTime v_dLastUpdateDate, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFetchInstallersList(v_sCompanyName, v_dLastUpdateDate, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ABP.ServiceExt.FetchInstallersResult ABP.ServiceExt.IService.EndFetchInstallersList(System.IAsyncResult result) {
            return base.Channel.EndFetchInstallersList(result);
        }
        
        private System.IAsyncResult OnBeginFetchInstallersList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_sCompanyName = ((string)(inValues[0]));
            System.DateTime v_dLastUpdateDate = ((System.DateTime)(inValues[1]));
            string v_sAuthID = ((string)(inValues[2]));
            string v_sToken = ((string)(inValues[3]));
            return ((ABP.ServiceExt.IService)(this)).BeginFetchInstallersList(v_sCompanyName, v_dLastUpdateDate, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        private object[] OnEndFetchInstallersList(System.IAsyncResult result) {
            ABP.ServiceExt.FetchInstallersResult retVal = ((ABP.ServiceExt.IService)(this)).EndFetchInstallersList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFetchInstallersListCompleted(object state) {
            if ((this.FetchInstallersListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FetchInstallersListCompleted(this, new FetchInstallersListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FetchInstallersListAsync(string v_sCompanyName, System.DateTime v_dLastUpdateDate, string v_sAuthID, string v_sToken) {
            this.FetchInstallersListAsync(v_sCompanyName, v_dLastUpdateDate, v_sAuthID, v_sToken, null);
        }
        
        public void FetchInstallersListAsync(string v_sCompanyName, System.DateTime v_dLastUpdateDate, string v_sAuthID, string v_sToken, object userState) {
            if ((this.onBeginFetchInstallersListDelegate == null)) {
                this.onBeginFetchInstallersListDelegate = new BeginOperationDelegate(this.OnBeginFetchInstallersList);
            }
            if ((this.onEndFetchInstallersListDelegate == null)) {
                this.onEndFetchInstallersListDelegate = new EndOperationDelegate(this.OnEndFetchInstallersList);
            }
            if ((this.onFetchInstallersListCompletedDelegate == null)) {
                this.onFetchInstallersListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFetchInstallersListCompleted);
            }
            base.InvokeAsync(this.onBeginFetchInstallersListDelegate, new object[] {
                        v_sCompanyName,
                        v_dLastUpdateDate,
                        v_sAuthID,
                        v_sToken}, this.onEndFetchInstallersListDelegate, this.onFetchInstallersListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ABP.ServiceExt.IService.BeginCheckForUpdatedSettings(string v_sCompanyName, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SettingDetails> v_svSettings, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckForUpdatedSettings(v_sCompanyName, v_svSettings, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ABP.ServiceExt.SettingsCheckResult ABP.ServiceExt.IService.EndCheckForUpdatedSettings(System.IAsyncResult result) {
            return base.Channel.EndCheckForUpdatedSettings(result);
        }
        
        private System.IAsyncResult OnBeginCheckForUpdatedSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_sCompanyName = ((string)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SettingDetails> v_svSettings = ((System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SettingDetails>)(inValues[1]));
            string v_sAuthID = ((string)(inValues[2]));
            string v_sToken = ((string)(inValues[3]));
            return ((ABP.ServiceExt.IService)(this)).BeginCheckForUpdatedSettings(v_sCompanyName, v_svSettings, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        private object[] OnEndCheckForUpdatedSettings(System.IAsyncResult result) {
            ABP.ServiceExt.SettingsCheckResult retVal = ((ABP.ServiceExt.IService)(this)).EndCheckForUpdatedSettings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckForUpdatedSettingsCompleted(object state) {
            if ((this.CheckForUpdatedSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckForUpdatedSettingsCompleted(this, new CheckForUpdatedSettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckForUpdatedSettingsAsync(string v_sCompanyName, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SettingDetails> v_svSettings, string v_sAuthID, string v_sToken) {
            this.CheckForUpdatedSettingsAsync(v_sCompanyName, v_svSettings, v_sAuthID, v_sToken, null);
        }
        
        public void CheckForUpdatedSettingsAsync(string v_sCompanyName, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SettingDetails> v_svSettings, string v_sAuthID, string v_sToken, object userState) {
            if ((this.onBeginCheckForUpdatedSettingsDelegate == null)) {
                this.onBeginCheckForUpdatedSettingsDelegate = new BeginOperationDelegate(this.OnBeginCheckForUpdatedSettings);
            }
            if ((this.onEndCheckForUpdatedSettingsDelegate == null)) {
                this.onEndCheckForUpdatedSettingsDelegate = new EndOperationDelegate(this.OnEndCheckForUpdatedSettings);
            }
            if ((this.onCheckForUpdatedSettingsCompletedDelegate == null)) {
                this.onCheckForUpdatedSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckForUpdatedSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginCheckForUpdatedSettingsDelegate, new object[] {
                        v_sCompanyName,
                        v_svSettings,
                        v_sAuthID,
                        v_sToken}, this.onEndCheckForUpdatedSettingsDelegate, this.onCheckForUpdatedSettingsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ABP.ServiceExt.IService.BeginReturnAreSystemsAvailable(string v_sCompanyName, string v_sUserProfile, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReturnAreSystemsAvailable(v_sCompanyName, v_sUserProfile, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ABP.ServiceExt.SystemsAvailableResult ABP.ServiceExt.IService.EndReturnAreSystemsAvailable(System.IAsyncResult result) {
            return base.Channel.EndReturnAreSystemsAvailable(result);
        }
        
        private System.IAsyncResult OnBeginReturnAreSystemsAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_sCompanyName = ((string)(inValues[0]));
            string v_sUserProfile = ((string)(inValues[1]));
            string v_sAuthID = ((string)(inValues[2]));
            string v_sToken = ((string)(inValues[3]));
            return ((ABP.ServiceExt.IService)(this)).BeginReturnAreSystemsAvailable(v_sCompanyName, v_sUserProfile, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        private object[] OnEndReturnAreSystemsAvailable(System.IAsyncResult result) {
            ABP.ServiceExt.SystemsAvailableResult retVal = ((ABP.ServiceExt.IService)(this)).EndReturnAreSystemsAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReturnAreSystemsAvailableCompleted(object state) {
            if ((this.ReturnAreSystemsAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReturnAreSystemsAvailableCompleted(this, new ReturnAreSystemsAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReturnAreSystemsAvailableAsync(string v_sCompanyName, string v_sUserProfile, string v_sAuthID, string v_sToken) {
            this.ReturnAreSystemsAvailableAsync(v_sCompanyName, v_sUserProfile, v_sAuthID, v_sToken, null);
        }
        
        public void ReturnAreSystemsAvailableAsync(string v_sCompanyName, string v_sUserProfile, string v_sAuthID, string v_sToken, object userState) {
            if ((this.onBeginReturnAreSystemsAvailableDelegate == null)) {
                this.onBeginReturnAreSystemsAvailableDelegate = new BeginOperationDelegate(this.OnBeginReturnAreSystemsAvailable);
            }
            if ((this.onEndReturnAreSystemsAvailableDelegate == null)) {
                this.onEndReturnAreSystemsAvailableDelegate = new EndOperationDelegate(this.OnEndReturnAreSystemsAvailable);
            }
            if ((this.onReturnAreSystemsAvailableCompletedDelegate == null)) {
                this.onReturnAreSystemsAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReturnAreSystemsAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginReturnAreSystemsAvailableDelegate, new object[] {
                        v_sCompanyName,
                        v_sUserProfile,
                        v_sAuthID,
                        v_sToken}, this.onEndReturnAreSystemsAvailableDelegate, this.onReturnAreSystemsAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ABP.ServiceExt.IService.BeginReturnSubProjectFileChanges(string v_sCompanyName, string v_sProjectNo, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SubProjectFileDetail> v_fdFiles, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReturnSubProjectFileChanges(v_sCompanyName, v_sProjectNo, v_sSubProjectNo, v_fdFiles, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ABP.ServiceExt.FileChangesResult ABP.ServiceExt.IService.EndReturnSubProjectFileChanges(System.IAsyncResult result) {
            return base.Channel.EndReturnSubProjectFileChanges(result);
        }
        
        private System.IAsyncResult OnBeginReturnSubProjectFileChanges(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_sCompanyName = ((string)(inValues[0]));
            string v_sProjectNo = ((string)(inValues[1]));
            string v_sSubProjectNo = ((string)(inValues[2]));
            System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SubProjectFileDetail> v_fdFiles = ((System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SubProjectFileDetail>)(inValues[3]));
            string v_sAuthID = ((string)(inValues[4]));
            string v_sToken = ((string)(inValues[5]));
            return ((ABP.ServiceExt.IService)(this)).BeginReturnSubProjectFileChanges(v_sCompanyName, v_sProjectNo, v_sSubProjectNo, v_fdFiles, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        private object[] OnEndReturnSubProjectFileChanges(System.IAsyncResult result) {
            ABP.ServiceExt.FileChangesResult retVal = ((ABP.ServiceExt.IService)(this)).EndReturnSubProjectFileChanges(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReturnSubProjectFileChangesCompleted(object state) {
            if ((this.ReturnSubProjectFileChangesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReturnSubProjectFileChangesCompleted(this, new ReturnSubProjectFileChangesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReturnSubProjectFileChangesAsync(string v_sCompanyName, string v_sProjectNo, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SubProjectFileDetail> v_fdFiles, string v_sAuthID, string v_sToken) {
            this.ReturnSubProjectFileChangesAsync(v_sCompanyName, v_sProjectNo, v_sSubProjectNo, v_fdFiles, v_sAuthID, v_sToken, null);
        }
        
        public void ReturnSubProjectFileChangesAsync(string v_sCompanyName, string v_sProjectNo, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SubProjectFileDetail> v_fdFiles, string v_sAuthID, string v_sToken, object userState) {
            if ((this.onBeginReturnSubProjectFileChangesDelegate == null)) {
                this.onBeginReturnSubProjectFileChangesDelegate = new BeginOperationDelegate(this.OnBeginReturnSubProjectFileChanges);
            }
            if ((this.onEndReturnSubProjectFileChangesDelegate == null)) {
                this.onEndReturnSubProjectFileChangesDelegate = new EndOperationDelegate(this.OnEndReturnSubProjectFileChanges);
            }
            if ((this.onReturnSubProjectFileChangesCompletedDelegate == null)) {
                this.onReturnSubProjectFileChangesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReturnSubProjectFileChangesCompleted);
            }
            base.InvokeAsync(this.onBeginReturnSubProjectFileChangesDelegate, new object[] {
                        v_sCompanyName,
                        v_sProjectNo,
                        v_sSubProjectNo,
                        v_fdFiles,
                        v_sAuthID,
                        v_sToken}, this.onEndReturnSubProjectFileChangesDelegate, this.onReturnSubProjectFileChangesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ABP.ServiceExt.IService.BeginCheckForDataDownloadChanges(string v_sCompanyName, string v_sPurpose, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.DownloadDataChange> v_cSubProjects, bool v_bCheckForNewSubProjects, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckForDataDownloadChanges(v_sCompanyName, v_sPurpose, v_cSubProjects, v_bCheckForNewSubProjects, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ABP.ServiceExt.DownloadDataChangesResult ABP.ServiceExt.IService.EndCheckForDataDownloadChanges(System.IAsyncResult result) {
            return base.Channel.EndCheckForDataDownloadChanges(result);
        }
        
        private System.IAsyncResult OnBeginCheckForDataDownloadChanges(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_sCompanyName = ((string)(inValues[0]));
            string v_sPurpose = ((string)(inValues[1]));
            System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.DownloadDataChange> v_cSubProjects = ((System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.DownloadDataChange>)(inValues[2]));
            bool v_bCheckForNewSubProjects = ((bool)(inValues[3]));
            string v_sAuthID = ((string)(inValues[4]));
            string v_sToken = ((string)(inValues[5]));
            return ((ABP.ServiceExt.IService)(this)).BeginCheckForDataDownloadChanges(v_sCompanyName, v_sPurpose, v_cSubProjects, v_bCheckForNewSubProjects, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        private object[] OnEndCheckForDataDownloadChanges(System.IAsyncResult result) {
            ABP.ServiceExt.DownloadDataChangesResult retVal = ((ABP.ServiceExt.IService)(this)).EndCheckForDataDownloadChanges(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckForDataDownloadChangesCompleted(object state) {
            if ((this.CheckForDataDownloadChangesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckForDataDownloadChangesCompleted(this, new CheckForDataDownloadChangesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckForDataDownloadChangesAsync(string v_sCompanyName, string v_sPurpose, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.DownloadDataChange> v_cSubProjects, bool v_bCheckForNewSubProjects, string v_sAuthID, string v_sToken) {
            this.CheckForDataDownloadChangesAsync(v_sCompanyName, v_sPurpose, v_cSubProjects, v_bCheckForNewSubProjects, v_sAuthID, v_sToken, null);
        }
        
        public void CheckForDataDownloadChangesAsync(string v_sCompanyName, string v_sPurpose, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.DownloadDataChange> v_cSubProjects, bool v_bCheckForNewSubProjects, string v_sAuthID, string v_sToken, object userState) {
            if ((this.onBeginCheckForDataDownloadChangesDelegate == null)) {
                this.onBeginCheckForDataDownloadChangesDelegate = new BeginOperationDelegate(this.OnBeginCheckForDataDownloadChanges);
            }
            if ((this.onEndCheckForDataDownloadChangesDelegate == null)) {
                this.onEndCheckForDataDownloadChangesDelegate = new EndOperationDelegate(this.OnEndCheckForDataDownloadChanges);
            }
            if ((this.onCheckForDataDownloadChangesCompletedDelegate == null)) {
                this.onCheckForDataDownloadChangesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckForDataDownloadChangesCompleted);
            }
            base.InvokeAsync(this.onBeginCheckForDataDownloadChangesDelegate, new object[] {
                        v_sCompanyName,
                        v_sPurpose,
                        v_cSubProjects,
                        v_bCheckForNewSubProjects,
                        v_sAuthID,
                        v_sToken}, this.onEndCheckForDataDownloadChangesDelegate, this.onCheckForDataDownloadChangesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ABP.ServiceExt.IService.BeginUploadFileChanges(string v_sCompanyName, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UploadFileChange> v_cChanges, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadFileChanges(v_sCompanyName, v_sSubProjectNo, v_cChanges, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ABP.ServiceExt.UploadChangesResult ABP.ServiceExt.IService.EndUploadFileChanges(System.IAsyncResult result) {
            return base.Channel.EndUploadFileChanges(result);
        }
        
        private System.IAsyncResult OnBeginUploadFileChanges(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_sCompanyName = ((string)(inValues[0]));
            string v_sSubProjectNo = ((string)(inValues[1]));
            System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UploadFileChange> v_cChanges = ((System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UploadFileChange>)(inValues[2]));
            string v_sAuthID = ((string)(inValues[3]));
            string v_sToken = ((string)(inValues[4]));
            return ((ABP.ServiceExt.IService)(this)).BeginUploadFileChanges(v_sCompanyName, v_sSubProjectNo, v_cChanges, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        private object[] OnEndUploadFileChanges(System.IAsyncResult result) {
            ABP.ServiceExt.UploadChangesResult retVal = ((ABP.ServiceExt.IService)(this)).EndUploadFileChanges(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadFileChangesCompleted(object state) {
            if ((this.UploadFileChangesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadFileChangesCompleted(this, new UploadFileChangesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadFileChangesAsync(string v_sCompanyName, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UploadFileChange> v_cChanges, string v_sAuthID, string v_sToken) {
            this.UploadFileChangesAsync(v_sCompanyName, v_sSubProjectNo, v_cChanges, v_sAuthID, v_sToken, null);
        }
        
        public void UploadFileChangesAsync(string v_sCompanyName, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UploadFileChange> v_cChanges, string v_sAuthID, string v_sToken, object userState) {
            if ((this.onBeginUploadFileChangesDelegate == null)) {
                this.onBeginUploadFileChangesDelegate = new BeginOperationDelegate(this.OnBeginUploadFileChanges);
            }
            if ((this.onEndUploadFileChangesDelegate == null)) {
                this.onEndUploadFileChangesDelegate = new EndOperationDelegate(this.OnEndUploadFileChanges);
            }
            if ((this.onUploadFileChangesCompletedDelegate == null)) {
                this.onUploadFileChangesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadFileChangesCompleted);
            }
            base.InvokeAsync(this.onBeginUploadFileChangesDelegate, new object[] {
                        v_sCompanyName,
                        v_sSubProjectNo,
                        v_cChanges,
                        v_sAuthID,
                        v_sToken}, this.onEndUploadFileChangesDelegate, this.onUploadFileChangesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ABP.ServiceExt.IService.BeginUploadSubProjectFiles(string v_sCompanyName, string v_sSubProjectNo, string v_sUserName, string v_sMachineName, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UploadFileChange> v_cChanges, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadSubProjectFiles(v_sCompanyName, v_sSubProjectNo, v_sUserName, v_sMachineName, v_cChanges, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ABP.ServiceExt.UploadChangesResult ABP.ServiceExt.IService.EndUploadSubProjectFiles(System.IAsyncResult result) {
            return base.Channel.EndUploadSubProjectFiles(result);
        }
        
        private System.IAsyncResult OnBeginUploadSubProjectFiles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_sCompanyName = ((string)(inValues[0]));
            string v_sSubProjectNo = ((string)(inValues[1]));
            string v_sUserName = ((string)(inValues[2]));
            string v_sMachineName = ((string)(inValues[3]));
            System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UploadFileChange> v_cChanges = ((System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UploadFileChange>)(inValues[4]));
            string v_sAuthID = ((string)(inValues[5]));
            string v_sToken = ((string)(inValues[6]));
            return ((ABP.ServiceExt.IService)(this)).BeginUploadSubProjectFiles(v_sCompanyName, v_sSubProjectNo, v_sUserName, v_sMachineName, v_cChanges, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        private object[] OnEndUploadSubProjectFiles(System.IAsyncResult result) {
            ABP.ServiceExt.UploadChangesResult retVal = ((ABP.ServiceExt.IService)(this)).EndUploadSubProjectFiles(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadSubProjectFilesCompleted(object state) {
            if ((this.UploadSubProjectFilesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadSubProjectFilesCompleted(this, new UploadSubProjectFilesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadSubProjectFilesAsync(string v_sCompanyName, string v_sSubProjectNo, string v_sUserName, string v_sMachineName, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UploadFileChange> v_cChanges, string v_sAuthID, string v_sToken) {
            this.UploadSubProjectFilesAsync(v_sCompanyName, v_sSubProjectNo, v_sUserName, v_sMachineName, v_cChanges, v_sAuthID, v_sToken, null);
        }
        
        public void UploadSubProjectFilesAsync(string v_sCompanyName, string v_sSubProjectNo, string v_sUserName, string v_sMachineName, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UploadFileChange> v_cChanges, string v_sAuthID, string v_sToken, object userState) {
            if ((this.onBeginUploadSubProjectFilesDelegate == null)) {
                this.onBeginUploadSubProjectFilesDelegate = new BeginOperationDelegate(this.OnBeginUploadSubProjectFiles);
            }
            if ((this.onEndUploadSubProjectFilesDelegate == null)) {
                this.onEndUploadSubProjectFilesDelegate = new EndOperationDelegate(this.OnEndUploadSubProjectFiles);
            }
            if ((this.onUploadSubProjectFilesCompletedDelegate == null)) {
                this.onUploadSubProjectFilesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadSubProjectFilesCompleted);
            }
            base.InvokeAsync(this.onBeginUploadSubProjectFilesDelegate, new object[] {
                        v_sCompanyName,
                        v_sSubProjectNo,
                        v_sUserName,
                        v_sMachineName,
                        v_cChanges,
                        v_sAuthID,
                        v_sToken}, this.onEndUploadSubProjectFilesDelegate, this.onUploadSubProjectFilesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ABP.ServiceExt.IService.BeginUploadSubProjectDataChanges(string v_sCompanyName, string v_sPurpose, string v_sUserName, string v_sMachineName, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.cAXDataUploadDataChange> v_cChanges, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadSubProjectDataChanges(v_sCompanyName, v_sPurpose, v_sUserName, v_sMachineName, v_sSubProjectNo, v_cChanges, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ABP.ServiceExt.UploadChangesResult ABP.ServiceExt.IService.EndUploadSubProjectDataChanges(System.IAsyncResult result) {
            return base.Channel.EndUploadSubProjectDataChanges(result);
        }
        
        private System.IAsyncResult OnBeginUploadSubProjectDataChanges(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_sCompanyName = ((string)(inValues[0]));
            string v_sPurpose = ((string)(inValues[1]));
            string v_sUserName = ((string)(inValues[2]));
            string v_sMachineName = ((string)(inValues[3]));
            string v_sSubProjectNo = ((string)(inValues[4]));
            System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.cAXDataUploadDataChange> v_cChanges = ((System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.cAXDataUploadDataChange>)(inValues[5]));
            string v_sAuthID = ((string)(inValues[6]));
            string v_sToken = ((string)(inValues[7]));
            return ((ABP.ServiceExt.IService)(this)).BeginUploadSubProjectDataChanges(v_sCompanyName, v_sPurpose, v_sUserName, v_sMachineName, v_sSubProjectNo, v_cChanges, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        private object[] OnEndUploadSubProjectDataChanges(System.IAsyncResult result) {
            ABP.ServiceExt.UploadChangesResult retVal = ((ABP.ServiceExt.IService)(this)).EndUploadSubProjectDataChanges(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadSubProjectDataChangesCompleted(object state) {
            if ((this.UploadSubProjectDataChangesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadSubProjectDataChangesCompleted(this, new UploadSubProjectDataChangesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadSubProjectDataChangesAsync(string v_sCompanyName, string v_sPurpose, string v_sUserName, string v_sMachineName, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.cAXDataUploadDataChange> v_cChanges, string v_sAuthID, string v_sToken) {
            this.UploadSubProjectDataChangesAsync(v_sCompanyName, v_sPurpose, v_sUserName, v_sMachineName, v_sSubProjectNo, v_cChanges, v_sAuthID, v_sToken, null);
        }
        
        public void UploadSubProjectDataChangesAsync(string v_sCompanyName, string v_sPurpose, string v_sUserName, string v_sMachineName, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.cAXDataUploadDataChange> v_cChanges, string v_sAuthID, string v_sToken, object userState) {
            if ((this.onBeginUploadSubProjectDataChangesDelegate == null)) {
                this.onBeginUploadSubProjectDataChangesDelegate = new BeginOperationDelegate(this.OnBeginUploadSubProjectDataChanges);
            }
            if ((this.onEndUploadSubProjectDataChangesDelegate == null)) {
                this.onEndUploadSubProjectDataChangesDelegate = new EndOperationDelegate(this.OnEndUploadSubProjectDataChanges);
            }
            if ((this.onUploadSubProjectDataChangesCompletedDelegate == null)) {
                this.onUploadSubProjectDataChangesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadSubProjectDataChangesCompleted);
            }
            base.InvokeAsync(this.onBeginUploadSubProjectDataChangesDelegate, new object[] {
                        v_sCompanyName,
                        v_sPurpose,
                        v_sUserName,
                        v_sMachineName,
                        v_sSubProjectNo,
                        v_cChanges,
                        v_sAuthID,
                        v_sToken}, this.onEndUploadSubProjectDataChangesDelegate, this.onUploadSubProjectDataChangesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ABP.ServiceExt.IService.BeginUploadSubProjectNotesChanges(string v_sCompanyName, string v_sPurpose, string v_sUserName, string v_sMachineName, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.NoteDetails> v_cNotes, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadSubProjectNotesChanges(v_sCompanyName, v_sPurpose, v_sUserName, v_sMachineName, v_sSubProjectNo, v_cNotes, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ABP.ServiceExt.UploadChangesResult ABP.ServiceExt.IService.EndUploadSubProjectNotesChanges(System.IAsyncResult result) {
            return base.Channel.EndUploadSubProjectNotesChanges(result);
        }
        
        private System.IAsyncResult OnBeginUploadSubProjectNotesChanges(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_sCompanyName = ((string)(inValues[0]));
            string v_sPurpose = ((string)(inValues[1]));
            string v_sUserName = ((string)(inValues[2]));
            string v_sMachineName = ((string)(inValues[3]));
            string v_sSubProjectNo = ((string)(inValues[4]));
            System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.NoteDetails> v_cNotes = ((System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.NoteDetails>)(inValues[5]));
            string v_sAuthID = ((string)(inValues[6]));
            string v_sToken = ((string)(inValues[7]));
            return ((ABP.ServiceExt.IService)(this)).BeginUploadSubProjectNotesChanges(v_sCompanyName, v_sPurpose, v_sUserName, v_sMachineName, v_sSubProjectNo, v_cNotes, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        private object[] OnEndUploadSubProjectNotesChanges(System.IAsyncResult result) {
            ABP.ServiceExt.UploadChangesResult retVal = ((ABP.ServiceExt.IService)(this)).EndUploadSubProjectNotesChanges(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadSubProjectNotesChangesCompleted(object state) {
            if ((this.UploadSubProjectNotesChangesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadSubProjectNotesChangesCompleted(this, new UploadSubProjectNotesChangesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadSubProjectNotesChangesAsync(string v_sCompanyName, string v_sPurpose, string v_sUserName, string v_sMachineName, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.NoteDetails> v_cNotes, string v_sAuthID, string v_sToken) {
            this.UploadSubProjectNotesChangesAsync(v_sCompanyName, v_sPurpose, v_sUserName, v_sMachineName, v_sSubProjectNo, v_cNotes, v_sAuthID, v_sToken, null);
        }
        
        public void UploadSubProjectNotesChangesAsync(string v_sCompanyName, string v_sPurpose, string v_sUserName, string v_sMachineName, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.NoteDetails> v_cNotes, string v_sAuthID, string v_sToken, object userState) {
            if ((this.onBeginUploadSubProjectNotesChangesDelegate == null)) {
                this.onBeginUploadSubProjectNotesChangesDelegate = new BeginOperationDelegate(this.OnBeginUploadSubProjectNotesChanges);
            }
            if ((this.onEndUploadSubProjectNotesChangesDelegate == null)) {
                this.onEndUploadSubProjectNotesChangesDelegate = new EndOperationDelegate(this.OnEndUploadSubProjectNotesChanges);
            }
            if ((this.onUploadSubProjectNotesChangesCompletedDelegate == null)) {
                this.onUploadSubProjectNotesChangesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadSubProjectNotesChangesCompleted);
            }
            base.InvokeAsync(this.onBeginUploadSubProjectNotesChangesDelegate, new object[] {
                        v_sCompanyName,
                        v_sPurpose,
                        v_sUserName,
                        v_sMachineName,
                        v_sSubProjectNo,
                        v_cNotes,
                        v_sAuthID,
                        v_sToken}, this.onEndUploadSubProjectNotesChangesDelegate, this.onUploadSubProjectNotesChangesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ABP.ServiceExt.IService.BeginReturnSubProjectFileDownload(string v_sFileName, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReturnSubProjectFileDownload(v_sFileName, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ABP.ServiceExt.SubProjectFileDownloadResult ABP.ServiceExt.IService.EndReturnSubProjectFileDownload(System.IAsyncResult result) {
            return base.Channel.EndReturnSubProjectFileDownload(result);
        }
        
        private System.IAsyncResult OnBeginReturnSubProjectFileDownload(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_sFileName = ((string)(inValues[0]));
            string v_sAuthID = ((string)(inValues[1]));
            string v_sToken = ((string)(inValues[2]));
            return ((ABP.ServiceExt.IService)(this)).BeginReturnSubProjectFileDownload(v_sFileName, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        private object[] OnEndReturnSubProjectFileDownload(System.IAsyncResult result) {
            ABP.ServiceExt.SubProjectFileDownloadResult retVal = ((ABP.ServiceExt.IService)(this)).EndReturnSubProjectFileDownload(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReturnSubProjectFileDownloadCompleted(object state) {
            if ((this.ReturnSubProjectFileDownloadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReturnSubProjectFileDownloadCompleted(this, new ReturnSubProjectFileDownloadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReturnSubProjectFileDownloadAsync(string v_sFileName, string v_sAuthID, string v_sToken) {
            this.ReturnSubProjectFileDownloadAsync(v_sFileName, v_sAuthID, v_sToken, null);
        }
        
        public void ReturnSubProjectFileDownloadAsync(string v_sFileName, string v_sAuthID, string v_sToken, object userState) {
            if ((this.onBeginReturnSubProjectFileDownloadDelegate == null)) {
                this.onBeginReturnSubProjectFileDownloadDelegate = new BeginOperationDelegate(this.OnBeginReturnSubProjectFileDownload);
            }
            if ((this.onEndReturnSubProjectFileDownloadDelegate == null)) {
                this.onEndReturnSubProjectFileDownloadDelegate = new EndOperationDelegate(this.OnEndReturnSubProjectFileDownload);
            }
            if ((this.onReturnSubProjectFileDownloadCompletedDelegate == null)) {
                this.onReturnSubProjectFileDownloadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReturnSubProjectFileDownloadCompleted);
            }
            base.InvokeAsync(this.onBeginReturnSubProjectFileDownloadDelegate, new object[] {
                        v_sFileName,
                        v_sAuthID,
                        v_sToken}, this.onEndReturnSubProjectFileDownloadDelegate, this.onReturnSubProjectFileDownloadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ABP.ServiceExt.IService.BeginReturnSubProjectFiles(string v_sCompanyName, string v_sProjectNo, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReturnSubProjectFiles(v_sCompanyName, v_sProjectNo, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ABP.ServiceExt.SubProjectFilesResult ABP.ServiceExt.IService.EndReturnSubProjectFiles(System.IAsyncResult result) {
            return base.Channel.EndReturnSubProjectFiles(result);
        }
        
        private System.IAsyncResult OnBeginReturnSubProjectFiles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_sCompanyName = ((string)(inValues[0]));
            string v_sProjectNo = ((string)(inValues[1]));
            string v_sAuthID = ((string)(inValues[2]));
            string v_sToken = ((string)(inValues[3]));
            return ((ABP.ServiceExt.IService)(this)).BeginReturnSubProjectFiles(v_sCompanyName, v_sProjectNo, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        private object[] OnEndReturnSubProjectFiles(System.IAsyncResult result) {
            ABP.ServiceExt.SubProjectFilesResult retVal = ((ABP.ServiceExt.IService)(this)).EndReturnSubProjectFiles(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReturnSubProjectFilesCompleted(object state) {
            if ((this.ReturnSubProjectFilesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReturnSubProjectFilesCompleted(this, new ReturnSubProjectFilesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReturnSubProjectFilesAsync(string v_sCompanyName, string v_sProjectNo, string v_sAuthID, string v_sToken) {
            this.ReturnSubProjectFilesAsync(v_sCompanyName, v_sProjectNo, v_sAuthID, v_sToken, null);
        }
        
        public void ReturnSubProjectFilesAsync(string v_sCompanyName, string v_sProjectNo, string v_sAuthID, string v_sToken, object userState) {
            if ((this.onBeginReturnSubProjectFilesDelegate == null)) {
                this.onBeginReturnSubProjectFilesDelegate = new BeginOperationDelegate(this.OnBeginReturnSubProjectFiles);
            }
            if ((this.onEndReturnSubProjectFilesDelegate == null)) {
                this.onEndReturnSubProjectFilesDelegate = new EndOperationDelegate(this.OnEndReturnSubProjectFiles);
            }
            if ((this.onReturnSubProjectFilesCompletedDelegate == null)) {
                this.onReturnSubProjectFilesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReturnSubProjectFilesCompleted);
            }
            base.InvokeAsync(this.onBeginReturnSubProjectFilesDelegate, new object[] {
                        v_sCompanyName,
                        v_sProjectNo,
                        v_sAuthID,
                        v_sToken}, this.onEndReturnSubProjectFilesDelegate, this.onReturnSubProjectFilesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ABP.ServiceExt.IService.BeginReturnSubProjectData(string v_sCompanyName, string v_sProjectNo, string v_sPurpose, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReturnSubProjectData(v_sCompanyName, v_sProjectNo, v_sPurpose, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ABP.ServiceExt.SubProjectDataResult ABP.ServiceExt.IService.EndReturnSubProjectData(System.IAsyncResult result) {
            return base.Channel.EndReturnSubProjectData(result);
        }
        
        private System.IAsyncResult OnBeginReturnSubProjectData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_sCompanyName = ((string)(inValues[0]));
            string v_sProjectNo = ((string)(inValues[1]));
            string v_sPurpose = ((string)(inValues[2]));
            string v_sAuthID = ((string)(inValues[3]));
            string v_sToken = ((string)(inValues[4]));
            return ((ABP.ServiceExt.IService)(this)).BeginReturnSubProjectData(v_sCompanyName, v_sProjectNo, v_sPurpose, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        private object[] OnEndReturnSubProjectData(System.IAsyncResult result) {
            ABP.ServiceExt.SubProjectDataResult retVal = ((ABP.ServiceExt.IService)(this)).EndReturnSubProjectData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReturnSubProjectDataCompleted(object state) {
            if ((this.ReturnSubProjectDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReturnSubProjectDataCompleted(this, new ReturnSubProjectDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReturnSubProjectDataAsync(string v_sCompanyName, string v_sProjectNo, string v_sPurpose, string v_sAuthID, string v_sToken) {
            this.ReturnSubProjectDataAsync(v_sCompanyName, v_sProjectNo, v_sPurpose, v_sAuthID, v_sToken, null);
        }
        
        public void ReturnSubProjectDataAsync(string v_sCompanyName, string v_sProjectNo, string v_sPurpose, string v_sAuthID, string v_sToken, object userState) {
            if ((this.onBeginReturnSubProjectDataDelegate == null)) {
                this.onBeginReturnSubProjectDataDelegate = new BeginOperationDelegate(this.OnBeginReturnSubProjectData);
            }
            if ((this.onEndReturnSubProjectDataDelegate == null)) {
                this.onEndReturnSubProjectDataDelegate = new EndOperationDelegate(this.OnEndReturnSubProjectData);
            }
            if ((this.onReturnSubProjectDataCompletedDelegate == null)) {
                this.onReturnSubProjectDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReturnSubProjectDataCompleted);
            }
            base.InvokeAsync(this.onBeginReturnSubProjectDataDelegate, new object[] {
                        v_sCompanyName,
                        v_sProjectNo,
                        v_sPurpose,
                        v_sAuthID,
                        v_sToken}, this.onEndReturnSubProjectDataDelegate, this.onReturnSubProjectDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ABP.ServiceExt.IService.BeginReturnSubProjectsList(string v_sCompanyName, string v_sProjectNo, string v_sPurpose, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReturnSubProjectsList(v_sCompanyName, v_sProjectNo, v_sPurpose, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ABP.ServiceExt.SubProjectsListResult ABP.ServiceExt.IService.EndReturnSubProjectsList(System.IAsyncResult result) {
            return base.Channel.EndReturnSubProjectsList(result);
        }
        
        private System.IAsyncResult OnBeginReturnSubProjectsList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_sCompanyName = ((string)(inValues[0]));
            string v_sProjectNo = ((string)(inValues[1]));
            string v_sPurpose = ((string)(inValues[2]));
            string v_sAuthID = ((string)(inValues[3]));
            string v_sToken = ((string)(inValues[4]));
            return ((ABP.ServiceExt.IService)(this)).BeginReturnSubProjectsList(v_sCompanyName, v_sProjectNo, v_sPurpose, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        private object[] OnEndReturnSubProjectsList(System.IAsyncResult result) {
            ABP.ServiceExt.SubProjectsListResult retVal = ((ABP.ServiceExt.IService)(this)).EndReturnSubProjectsList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReturnSubProjectsListCompleted(object state) {
            if ((this.ReturnSubProjectsListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReturnSubProjectsListCompleted(this, new ReturnSubProjectsListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReturnSubProjectsListAsync(string v_sCompanyName, string v_sProjectNo, string v_sPurpose, string v_sAuthID, string v_sToken) {
            this.ReturnSubProjectsListAsync(v_sCompanyName, v_sProjectNo, v_sPurpose, v_sAuthID, v_sToken, null);
        }
        
        public void ReturnSubProjectsListAsync(string v_sCompanyName, string v_sProjectNo, string v_sPurpose, string v_sAuthID, string v_sToken, object userState) {
            if ((this.onBeginReturnSubProjectsListDelegate == null)) {
                this.onBeginReturnSubProjectsListDelegate = new BeginOperationDelegate(this.OnBeginReturnSubProjectsList);
            }
            if ((this.onEndReturnSubProjectsListDelegate == null)) {
                this.onEndReturnSubProjectsListDelegate = new EndOperationDelegate(this.OnEndReturnSubProjectsList);
            }
            if ((this.onReturnSubProjectsListCompletedDelegate == null)) {
                this.onReturnSubProjectsListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReturnSubProjectsListCompleted);
            }
            base.InvokeAsync(this.onBeginReturnSubProjectsListDelegate, new object[] {
                        v_sCompanyName,
                        v_sProjectNo,
                        v_sPurpose,
                        v_sAuthID,
                        v_sToken}, this.onEndReturnSubProjectsListDelegate, this.onReturnSubProjectsListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ABP.ServiceExt.IService.BeginReturnBaseEnums(string v_sCompanyName, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.BaseEnumField> v_beFields, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReturnBaseEnums(v_sCompanyName, v_beFields, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ABP.ServiceExt.BaseEnumResult ABP.ServiceExt.IService.EndReturnBaseEnums(System.IAsyncResult result) {
            return base.Channel.EndReturnBaseEnums(result);
        }
        
        private System.IAsyncResult OnBeginReturnBaseEnums(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_sCompanyName = ((string)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.BaseEnumField> v_beFields = ((System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.BaseEnumField>)(inValues[1]));
            string v_sAuthID = ((string)(inValues[2]));
            string v_sToken = ((string)(inValues[3]));
            return ((ABP.ServiceExt.IService)(this)).BeginReturnBaseEnums(v_sCompanyName, v_beFields, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        private object[] OnEndReturnBaseEnums(System.IAsyncResult result) {
            ABP.ServiceExt.BaseEnumResult retVal = ((ABP.ServiceExt.IService)(this)).EndReturnBaseEnums(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReturnBaseEnumsCompleted(object state) {
            if ((this.ReturnBaseEnumsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReturnBaseEnumsCompleted(this, new ReturnBaseEnumsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReturnBaseEnumsAsync(string v_sCompanyName, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.BaseEnumField> v_beFields, string v_sAuthID, string v_sToken) {
            this.ReturnBaseEnumsAsync(v_sCompanyName, v_beFields, v_sAuthID, v_sToken, null);
        }
        
        public void ReturnBaseEnumsAsync(string v_sCompanyName, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.BaseEnumField> v_beFields, string v_sAuthID, string v_sToken, object userState) {
            if ((this.onBeginReturnBaseEnumsDelegate == null)) {
                this.onBeginReturnBaseEnumsDelegate = new BeginOperationDelegate(this.OnBeginReturnBaseEnums);
            }
            if ((this.onEndReturnBaseEnumsDelegate == null)) {
                this.onEndReturnBaseEnumsDelegate = new EndOperationDelegate(this.OnEndReturnBaseEnums);
            }
            if ((this.onReturnBaseEnumsCompletedDelegate == null)) {
                this.onReturnBaseEnumsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReturnBaseEnumsCompleted);
            }
            base.InvokeAsync(this.onBeginReturnBaseEnumsDelegate, new object[] {
                        v_sCompanyName,
                        v_beFields,
                        v_sAuthID,
                        v_sToken}, this.onEndReturnBaseEnumsDelegate, this.onReturnBaseEnumsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ABP.ServiceExt.IService.BeginSearchForContract(string v_sCompanyName, string v_sProjectName, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchForContract(v_sCompanyName, v_sProjectName, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ABP.ServiceExt.ProjectSearchResult ABP.ServiceExt.IService.EndSearchForContract(System.IAsyncResult result) {
            return base.Channel.EndSearchForContract(result);
        }
        
        private System.IAsyncResult OnBeginSearchForContract(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_sCompanyName = ((string)(inValues[0]));
            string v_sProjectName = ((string)(inValues[1]));
            string v_sAuthID = ((string)(inValues[2]));
            string v_sToken = ((string)(inValues[3]));
            return ((ABP.ServiceExt.IService)(this)).BeginSearchForContract(v_sCompanyName, v_sProjectName, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        private object[] OnEndSearchForContract(System.IAsyncResult result) {
            ABP.ServiceExt.ProjectSearchResult retVal = ((ABP.ServiceExt.IService)(this)).EndSearchForContract(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchForContractCompleted(object state) {
            if ((this.SearchForContractCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchForContractCompleted(this, new SearchForContractCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchForContractAsync(string v_sCompanyName, string v_sProjectName, string v_sAuthID, string v_sToken) {
            this.SearchForContractAsync(v_sCompanyName, v_sProjectName, v_sAuthID, v_sToken, null);
        }
        
        public void SearchForContractAsync(string v_sCompanyName, string v_sProjectName, string v_sAuthID, string v_sToken, object userState) {
            if ((this.onBeginSearchForContractDelegate == null)) {
                this.onBeginSearchForContractDelegate = new BeginOperationDelegate(this.OnBeginSearchForContract);
            }
            if ((this.onEndSearchForContractDelegate == null)) {
                this.onEndSearchForContractDelegate = new EndOperationDelegate(this.OnEndSearchForContract);
            }
            if ((this.onSearchForContractCompletedDelegate == null)) {
                this.onSearchForContractCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchForContractCompleted);
            }
            base.InvokeAsync(this.onBeginSearchForContractDelegate, new object[] {
                        v_sCompanyName,
                        v_sProjectName,
                        v_sAuthID,
                        v_sToken}, this.onEndSearchForContractDelegate, this.onSearchForContractCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ABP.ServiceExt.IService.BeginValidateProject(string v_sCompanyName, string v_sProjectNo, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateProject(v_sCompanyName, v_sProjectNo, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ABP.ServiceExt.ProjectValidationResult ABP.ServiceExt.IService.EndValidateProject(System.IAsyncResult result) {
            return base.Channel.EndValidateProject(result);
        }
        
        private System.IAsyncResult OnBeginValidateProject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_sCompanyName = ((string)(inValues[0]));
            string v_sProjectNo = ((string)(inValues[1]));
            string v_sAuthID = ((string)(inValues[2]));
            string v_sToken = ((string)(inValues[3]));
            return ((ABP.ServiceExt.IService)(this)).BeginValidateProject(v_sCompanyName, v_sProjectNo, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        private object[] OnEndValidateProject(System.IAsyncResult result) {
            ABP.ServiceExt.ProjectValidationResult retVal = ((ABP.ServiceExt.IService)(this)).EndValidateProject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidateProjectCompleted(object state) {
            if ((this.ValidateProjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateProjectCompleted(this, new ValidateProjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateProjectAsync(string v_sCompanyName, string v_sProjectNo, string v_sAuthID, string v_sToken) {
            this.ValidateProjectAsync(v_sCompanyName, v_sProjectNo, v_sAuthID, v_sToken, null);
        }
        
        public void ValidateProjectAsync(string v_sCompanyName, string v_sProjectNo, string v_sAuthID, string v_sToken, object userState) {
            if ((this.onBeginValidateProjectDelegate == null)) {
                this.onBeginValidateProjectDelegate = new BeginOperationDelegate(this.OnBeginValidateProject);
            }
            if ((this.onEndValidateProjectDelegate == null)) {
                this.onEndValidateProjectDelegate = new EndOperationDelegate(this.OnEndValidateProject);
            }
            if ((this.onValidateProjectCompletedDelegate == null)) {
                this.onValidateProjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateProjectCompleted);
            }
            base.InvokeAsync(this.onBeginValidateProjectDelegate, new object[] {
                        v_sCompanyName,
                        v_sProjectNo,
                        v_sAuthID,
                        v_sToken}, this.onEndValidateProjectDelegate, this.onValidateProjectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ABP.ServiceExt.IService.BeginFetchFailedSurveyReasons(string v_sCompanyName, System.DateTime v_dLastUpdateDate, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFetchFailedSurveyReasons(v_sCompanyName, v_dLastUpdateDate, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ABP.ServiceExt.FetchSurveyFailedReasonsResult ABP.ServiceExt.IService.EndFetchFailedSurveyReasons(System.IAsyncResult result) {
            return base.Channel.EndFetchFailedSurveyReasons(result);
        }
        
        private System.IAsyncResult OnBeginFetchFailedSurveyReasons(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_sCompanyName = ((string)(inValues[0]));
            System.DateTime v_dLastUpdateDate = ((System.DateTime)(inValues[1]));
            string v_sAuthID = ((string)(inValues[2]));
            string v_sToken = ((string)(inValues[3]));
            return ((ABP.ServiceExt.IService)(this)).BeginFetchFailedSurveyReasons(v_sCompanyName, v_dLastUpdateDate, v_sAuthID, v_sToken, callback, asyncState);
        }
        
        private object[] OnEndFetchFailedSurveyReasons(System.IAsyncResult result) {
            ABP.ServiceExt.FetchSurveyFailedReasonsResult retVal = ((ABP.ServiceExt.IService)(this)).EndFetchFailedSurveyReasons(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFetchFailedSurveyReasonsCompleted(object state) {
            if ((this.FetchFailedSurveyReasonsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FetchFailedSurveyReasonsCompleted(this, new FetchFailedSurveyReasonsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FetchFailedSurveyReasonsAsync(string v_sCompanyName, System.DateTime v_dLastUpdateDate, string v_sAuthID, string v_sToken) {
            this.FetchFailedSurveyReasonsAsync(v_sCompanyName, v_dLastUpdateDate, v_sAuthID, v_sToken, null);
        }
        
        public void FetchFailedSurveyReasonsAsync(string v_sCompanyName, System.DateTime v_dLastUpdateDate, string v_sAuthID, string v_sToken, object userState) {
            if ((this.onBeginFetchFailedSurveyReasonsDelegate == null)) {
                this.onBeginFetchFailedSurveyReasonsDelegate = new BeginOperationDelegate(this.OnBeginFetchFailedSurveyReasons);
            }
            if ((this.onEndFetchFailedSurveyReasonsDelegate == null)) {
                this.onEndFetchFailedSurveyReasonsDelegate = new EndOperationDelegate(this.OnEndFetchFailedSurveyReasons);
            }
            if ((this.onFetchFailedSurveyReasonsCompletedDelegate == null)) {
                this.onFetchFailedSurveyReasonsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFetchFailedSurveyReasonsCompleted);
            }
            base.InvokeAsync(this.onBeginFetchFailedSurveyReasonsDelegate, new object[] {
                        v_sCompanyName,
                        v_dLastUpdateDate,
                        v_sAuthID,
                        v_sToken}, this.onEndFetchFailedSurveyReasonsDelegate, this.onFetchFailedSurveyReasonsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override ABP.ServiceExt.IService CreateChannel() {
            return new ServiceClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService)) {
                return new System.ServiceModel.EndpointAddress("https://abpwebtest.anglian-windows.com/ax-surv-service-ext-116/Service.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return ServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return ServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IService);
        }
        
        private class ServiceClientChannel : ChannelBase<ABP.ServiceExt.IService>, ABP.ServiceExt.IService {
            
            public ServiceClientChannel(System.ServiceModel.ClientBase<ABP.ServiceExt.IService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginUploadUnitInstallationStatus(string v_sCompanyName, string v_sSubProjectNo, string v_sUserProfile, string v_sMachineName, System.DateTime v_dInstallationDate, string v_sInstallationTeam, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UnitDetails> v_udUnits, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[9];
                _args[0] = v_sCompanyName;
                _args[1] = v_sSubProjectNo;
                _args[2] = v_sUserProfile;
                _args[3] = v_sMachineName;
                _args[4] = v_dInstallationDate;
                _args[5] = v_sInstallationTeam;
                _args[6] = v_udUnits;
                _args[7] = v_sAuthID;
                _args[8] = v_sToken;
                System.IAsyncResult _result = base.BeginInvoke("UploadUnitInstallationStatus", _args, callback, asyncState);
                return _result;
            }
            
            public ABP.ServiceExt.UploadUnitsResult EndUploadUnitInstallationStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                ABP.ServiceExt.UploadUnitsResult _result = ((ABP.ServiceExt.UploadUnitsResult)(base.EndInvoke("UploadUnitInstallationStatus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckForSubProjectsUnitDataChanges(string v_sCompanyName, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UnitDetails> v_udUnits, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = v_sCompanyName;
                _args[1] = v_sSubProjectNo;
                _args[2] = v_udUnits;
                _args[3] = v_sAuthID;
                _args[4] = v_sToken;
                System.IAsyncResult _result = base.BeginInvoke("CheckForSubProjectsUnitDataChanges", _args, callback, asyncState);
                return _result;
            }
            
            public ABP.ServiceExt.CheckUnitChangesResult EndCheckForSubProjectsUnitDataChanges(System.IAsyncResult result) {
                object[] _args = new object[0];
                ABP.ServiceExt.CheckUnitChangesResult _result = ((ABP.ServiceExt.CheckUnitChangesResult)(base.EndInvoke("CheckForSubProjectsUnitDataChanges", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFetchInstallersProjectsList(string v_sCompanyName, string v_sInstallerUserProfile, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = v_sCompanyName;
                _args[1] = v_sInstallerUserProfile;
                _args[2] = v_sAuthID;
                _args[3] = v_sToken;
                System.IAsyncResult _result = base.BeginInvoke("FetchInstallersProjectsList", _args, callback, asyncState);
                return _result;
            }
            
            public ABP.ServiceExt.ProjectSearchResult EndFetchInstallersProjectsList(System.IAsyncResult result) {
                object[] _args = new object[0];
                ABP.ServiceExt.ProjectSearchResult _result = ((ABP.ServiceExt.ProjectSearchResult)(base.EndInvoke("FetchInstallersProjectsList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFetchInstallersList(string v_sCompanyName, System.DateTime v_dLastUpdateDate, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = v_sCompanyName;
                _args[1] = v_dLastUpdateDate;
                _args[2] = v_sAuthID;
                _args[3] = v_sToken;
                System.IAsyncResult _result = base.BeginInvoke("FetchInstallersList", _args, callback, asyncState);
                return _result;
            }
            
            public ABP.ServiceExt.FetchInstallersResult EndFetchInstallersList(System.IAsyncResult result) {
                object[] _args = new object[0];
                ABP.ServiceExt.FetchInstallersResult _result = ((ABP.ServiceExt.FetchInstallersResult)(base.EndInvoke("FetchInstallersList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckForUpdatedSettings(string v_sCompanyName, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SettingDetails> v_svSettings, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = v_sCompanyName;
                _args[1] = v_svSettings;
                _args[2] = v_sAuthID;
                _args[3] = v_sToken;
                System.IAsyncResult _result = base.BeginInvoke("CheckForUpdatedSettings", _args, callback, asyncState);
                return _result;
            }
            
            public ABP.ServiceExt.SettingsCheckResult EndCheckForUpdatedSettings(System.IAsyncResult result) {
                object[] _args = new object[0];
                ABP.ServiceExt.SettingsCheckResult _result = ((ABP.ServiceExt.SettingsCheckResult)(base.EndInvoke("CheckForUpdatedSettings", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReturnAreSystemsAvailable(string v_sCompanyName, string v_sUserProfile, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = v_sCompanyName;
                _args[1] = v_sUserProfile;
                _args[2] = v_sAuthID;
                _args[3] = v_sToken;
                System.IAsyncResult _result = base.BeginInvoke("ReturnAreSystemsAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public ABP.ServiceExt.SystemsAvailableResult EndReturnAreSystemsAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                ABP.ServiceExt.SystemsAvailableResult _result = ((ABP.ServiceExt.SystemsAvailableResult)(base.EndInvoke("ReturnAreSystemsAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReturnSubProjectFileChanges(string v_sCompanyName, string v_sProjectNo, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.SubProjectFileDetail> v_fdFiles, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = v_sCompanyName;
                _args[1] = v_sProjectNo;
                _args[2] = v_sSubProjectNo;
                _args[3] = v_fdFiles;
                _args[4] = v_sAuthID;
                _args[5] = v_sToken;
                System.IAsyncResult _result = base.BeginInvoke("ReturnSubProjectFileChanges", _args, callback, asyncState);
                return _result;
            }
            
            public ABP.ServiceExt.FileChangesResult EndReturnSubProjectFileChanges(System.IAsyncResult result) {
                object[] _args = new object[0];
                ABP.ServiceExt.FileChangesResult _result = ((ABP.ServiceExt.FileChangesResult)(base.EndInvoke("ReturnSubProjectFileChanges", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckForDataDownloadChanges(string v_sCompanyName, string v_sPurpose, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.DownloadDataChange> v_cSubProjects, bool v_bCheckForNewSubProjects, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = v_sCompanyName;
                _args[1] = v_sPurpose;
                _args[2] = v_cSubProjects;
                _args[3] = v_bCheckForNewSubProjects;
                _args[4] = v_sAuthID;
                _args[5] = v_sToken;
                System.IAsyncResult _result = base.BeginInvoke("CheckForDataDownloadChanges", _args, callback, asyncState);
                return _result;
            }
            
            public ABP.ServiceExt.DownloadDataChangesResult EndCheckForDataDownloadChanges(System.IAsyncResult result) {
                object[] _args = new object[0];
                ABP.ServiceExt.DownloadDataChangesResult _result = ((ABP.ServiceExt.DownloadDataChangesResult)(base.EndInvoke("CheckForDataDownloadChanges", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUploadFileChanges(string v_sCompanyName, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UploadFileChange> v_cChanges, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = v_sCompanyName;
                _args[1] = v_sSubProjectNo;
                _args[2] = v_cChanges;
                _args[3] = v_sAuthID;
                _args[4] = v_sToken;
                System.IAsyncResult _result = base.BeginInvoke("UploadFileChanges", _args, callback, asyncState);
                return _result;
            }
            
            public ABP.ServiceExt.UploadChangesResult EndUploadFileChanges(System.IAsyncResult result) {
                object[] _args = new object[0];
                ABP.ServiceExt.UploadChangesResult _result = ((ABP.ServiceExt.UploadChangesResult)(base.EndInvoke("UploadFileChanges", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUploadSubProjectFiles(string v_sCompanyName, string v_sSubProjectNo, string v_sUserName, string v_sMachineName, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.UploadFileChange> v_cChanges, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = v_sCompanyName;
                _args[1] = v_sSubProjectNo;
                _args[2] = v_sUserName;
                _args[3] = v_sMachineName;
                _args[4] = v_cChanges;
                _args[5] = v_sAuthID;
                _args[6] = v_sToken;
                System.IAsyncResult _result = base.BeginInvoke("UploadSubProjectFiles", _args, callback, asyncState);
                return _result;
            }
            
            public ABP.ServiceExt.UploadChangesResult EndUploadSubProjectFiles(System.IAsyncResult result) {
                object[] _args = new object[0];
                ABP.ServiceExt.UploadChangesResult _result = ((ABP.ServiceExt.UploadChangesResult)(base.EndInvoke("UploadSubProjectFiles", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUploadSubProjectDataChanges(string v_sCompanyName, string v_sPurpose, string v_sUserName, string v_sMachineName, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.cAXDataUploadDataChange> v_cChanges, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = v_sCompanyName;
                _args[1] = v_sPurpose;
                _args[2] = v_sUserName;
                _args[3] = v_sMachineName;
                _args[4] = v_sSubProjectNo;
                _args[5] = v_cChanges;
                _args[6] = v_sAuthID;
                _args[7] = v_sToken;
                System.IAsyncResult _result = base.BeginInvoke("UploadSubProjectDataChanges", _args, callback, asyncState);
                return _result;
            }
            
            public ABP.ServiceExt.UploadChangesResult EndUploadSubProjectDataChanges(System.IAsyncResult result) {
                object[] _args = new object[0];
                ABP.ServiceExt.UploadChangesResult _result = ((ABP.ServiceExt.UploadChangesResult)(base.EndInvoke("UploadSubProjectDataChanges", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUploadSubProjectNotesChanges(string v_sCompanyName, string v_sPurpose, string v_sUserName, string v_sMachineName, string v_sSubProjectNo, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.NoteDetails> v_cNotes, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = v_sCompanyName;
                _args[1] = v_sPurpose;
                _args[2] = v_sUserName;
                _args[3] = v_sMachineName;
                _args[4] = v_sSubProjectNo;
                _args[5] = v_cNotes;
                _args[6] = v_sAuthID;
                _args[7] = v_sToken;
                System.IAsyncResult _result = base.BeginInvoke("UploadSubProjectNotesChanges", _args, callback, asyncState);
                return _result;
            }
            
            public ABP.ServiceExt.UploadChangesResult EndUploadSubProjectNotesChanges(System.IAsyncResult result) {
                object[] _args = new object[0];
                ABP.ServiceExt.UploadChangesResult _result = ((ABP.ServiceExt.UploadChangesResult)(base.EndInvoke("UploadSubProjectNotesChanges", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReturnSubProjectFileDownload(string v_sFileName, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = v_sFileName;
                _args[1] = v_sAuthID;
                _args[2] = v_sToken;
                System.IAsyncResult _result = base.BeginInvoke("ReturnSubProjectFileDownload", _args, callback, asyncState);
                return _result;
            }
            
            public ABP.ServiceExt.SubProjectFileDownloadResult EndReturnSubProjectFileDownload(System.IAsyncResult result) {
                object[] _args = new object[0];
                ABP.ServiceExt.SubProjectFileDownloadResult _result = ((ABP.ServiceExt.SubProjectFileDownloadResult)(base.EndInvoke("ReturnSubProjectFileDownload", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReturnSubProjectFiles(string v_sCompanyName, string v_sProjectNo, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = v_sCompanyName;
                _args[1] = v_sProjectNo;
                _args[2] = v_sAuthID;
                _args[3] = v_sToken;
                System.IAsyncResult _result = base.BeginInvoke("ReturnSubProjectFiles", _args, callback, asyncState);
                return _result;
            }
            
            public ABP.ServiceExt.SubProjectFilesResult EndReturnSubProjectFiles(System.IAsyncResult result) {
                object[] _args = new object[0];
                ABP.ServiceExt.SubProjectFilesResult _result = ((ABP.ServiceExt.SubProjectFilesResult)(base.EndInvoke("ReturnSubProjectFiles", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReturnSubProjectData(string v_sCompanyName, string v_sProjectNo, string v_sPurpose, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = v_sCompanyName;
                _args[1] = v_sProjectNo;
                _args[2] = v_sPurpose;
                _args[3] = v_sAuthID;
                _args[4] = v_sToken;
                System.IAsyncResult _result = base.BeginInvoke("ReturnSubProjectData", _args, callback, asyncState);
                return _result;
            }
            
            public ABP.ServiceExt.SubProjectDataResult EndReturnSubProjectData(System.IAsyncResult result) {
                object[] _args = new object[0];
                ABP.ServiceExt.SubProjectDataResult _result = ((ABP.ServiceExt.SubProjectDataResult)(base.EndInvoke("ReturnSubProjectData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReturnSubProjectsList(string v_sCompanyName, string v_sProjectNo, string v_sPurpose, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = v_sCompanyName;
                _args[1] = v_sProjectNo;
                _args[2] = v_sPurpose;
                _args[3] = v_sAuthID;
                _args[4] = v_sToken;
                System.IAsyncResult _result = base.BeginInvoke("ReturnSubProjectsList", _args, callback, asyncState);
                return _result;
            }
            
            public ABP.ServiceExt.SubProjectsListResult EndReturnSubProjectsList(System.IAsyncResult result) {
                object[] _args = new object[0];
                ABP.ServiceExt.SubProjectsListResult _result = ((ABP.ServiceExt.SubProjectsListResult)(base.EndInvoke("ReturnSubProjectsList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReturnBaseEnums(string v_sCompanyName, System.Collections.ObjectModel.ObservableCollection<ABP.ServiceExt.BaseEnumField> v_beFields, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = v_sCompanyName;
                _args[1] = v_beFields;
                _args[2] = v_sAuthID;
                _args[3] = v_sToken;
                System.IAsyncResult _result = base.BeginInvoke("ReturnBaseEnums", _args, callback, asyncState);
                return _result;
            }
            
            public ABP.ServiceExt.BaseEnumResult EndReturnBaseEnums(System.IAsyncResult result) {
                object[] _args = new object[0];
                ABP.ServiceExt.BaseEnumResult _result = ((ABP.ServiceExt.BaseEnumResult)(base.EndInvoke("ReturnBaseEnums", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchForContract(string v_sCompanyName, string v_sProjectName, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = v_sCompanyName;
                _args[1] = v_sProjectName;
                _args[2] = v_sAuthID;
                _args[3] = v_sToken;
                System.IAsyncResult _result = base.BeginInvoke("SearchForContract", _args, callback, asyncState);
                return _result;
            }
            
            public ABP.ServiceExt.ProjectSearchResult EndSearchForContract(System.IAsyncResult result) {
                object[] _args = new object[0];
                ABP.ServiceExt.ProjectSearchResult _result = ((ABP.ServiceExt.ProjectSearchResult)(base.EndInvoke("SearchForContract", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginValidateProject(string v_sCompanyName, string v_sProjectNo, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = v_sCompanyName;
                _args[1] = v_sProjectNo;
                _args[2] = v_sAuthID;
                _args[3] = v_sToken;
                System.IAsyncResult _result = base.BeginInvoke("ValidateProject", _args, callback, asyncState);
                return _result;
            }
            
            public ABP.ServiceExt.ProjectValidationResult EndValidateProject(System.IAsyncResult result) {
                object[] _args = new object[0];
                ABP.ServiceExt.ProjectValidationResult _result = ((ABP.ServiceExt.ProjectValidationResult)(base.EndInvoke("ValidateProject", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFetchFailedSurveyReasons(string v_sCompanyName, System.DateTime v_dLastUpdateDate, string v_sAuthID, string v_sToken, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = v_sCompanyName;
                _args[1] = v_dLastUpdateDate;
                _args[2] = v_sAuthID;
                _args[3] = v_sToken;
                System.IAsyncResult _result = base.BeginInvoke("FetchFailedSurveyReasons", _args, callback, asyncState);
                return _result;
            }
            
            public ABP.ServiceExt.FetchSurveyFailedReasonsResult EndFetchFailedSurveyReasons(System.IAsyncResult result) {
                object[] _args = new object[0];
                ABP.ServiceExt.FetchSurveyFailedReasonsResult _result = ((ABP.ServiceExt.FetchSurveyFailedReasonsResult)(base.EndInvoke("FetchFailedSurveyReasons", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IService,
        }
    }
}
