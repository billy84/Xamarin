//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace ANG_ABP_INSTALLER_APP
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[42];
            _typeNameTable[0] = "DatePicker.PickerSelectorItem";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.ContentControl";
            _typeNameTable[2] = "Object";
            _typeNameTable[3] = "Windows.Foundation.Rect";
            _typeNameTable[4] = "Boolean";
            _typeNameTable[5] = "DatePicker.PickerSelector";
            _typeNameTable[6] = "Windows.UI.Xaml.Controls.ItemsControl";
            _typeNameTable[7] = "DatePicker.DataSourceType";
            _typeNameTable[8] = "System.Enum";
            _typeNameTable[9] = "System.ValueType";
            _typeNameTable[10] = "DatePicker.YearDataSource";
            _typeNameTable[11] = "DatePicker.MonthDataSource";
            _typeNameTable[12] = "DatePicker.DayDataSource";
            _typeNameTable[13] = "DatePicker.DateTimeWrapper";
            _typeNameTable[14] = "DatePicker.DatePicker";
            _typeNameTable[15] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[16] = "Double";
            _typeNameTable[17] = "System.DateTime";
            _typeNameTable[18] = "DatePicker.Controls.LoopItemsPanel";
            _typeNameTable[19] = "Windows.UI.Xaml.Controls.Panel";
            _typeNameTable[20] = "DatePicker.ScrollAction";
            _typeNameTable[21] = "ANG_ABP_INSTALLER_APP.Views.DownloadAllMyProjects";
            _typeNameTable[22] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[23] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[24] = "ANG_ABP_INSTALLER_APP.Common.ObservableDictionary";
            _typeNameTable[25] = "String";
            _typeNameTable[26] = "ANG_ABP_INSTALLER_APP.Common.NavigationHelper";
            _typeNameTable[27] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[28] = "ANG_ABP_INSTALLER_APP.Views.DownloadProjectPage";
            _typeNameTable[29] = "ANG_ABP_INSTALLER_APP.Views.InstallerSearch";
            _typeNameTable[30] = "ANG_ABP_INSTALLER_APP.Views.InstallationInputPartialPage";
            _typeNameTable[31] = "ANG_ABP_INSTALLER_APP.Views.InstallationInputResultPage";
            _typeNameTable[32] = "ANG_ABP_INSTALLER_APP.Views.InstallationInputSearchPage";
            _typeNameTable[33] = "ANG_ABP_INSTALLER_APP.MainPage";
            _typeNameTable[34] = "ANG_ABP_INSTALLER_APP.Views.SetInstallationDatesPage";
            _typeNameTable[35] = "ANG_ABP_INSTALLER_APP.Views.SetInstallationDetailsPage";
            _typeNameTable[36] = "ANG_ABP_INSTALLER_APP.Views.SetInstallationPhotosPage";
            _typeNameTable[37] = "ANG_ABP_INSTALLER_APP.Views.SyncPage";
            _typeNameTable[38] = "ANG_ABP_INSTALLER_APP.Views.UserSettingsPage";
            _typeNameTable[39] = "ANG_ABP_INSTALLER_APP.Views.ViewImagePage";
            _typeNameTable[40] = "ANG_ABP_INSTALLER_APP.Views.ViewMapPage";
            _typeNameTable[41] = "ANG_ABP_INSTALLER_APP.Views.ViewNotes";

            _typeTable = new global::System.Type[42];
            _typeTable[0] = typeof(global::DatePicker.PickerSelectorItem);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
            _typeTable[2] = typeof(global::System.Object);
            _typeTable[3] = typeof(global::Windows.Foundation.Rect);
            _typeTable[4] = typeof(global::System.Boolean);
            _typeTable[5] = typeof(global::DatePicker.PickerSelector);
            _typeTable[6] = typeof(global::Windows.UI.Xaml.Controls.ItemsControl);
            _typeTable[7] = typeof(global::DatePicker.DataSourceType);
            _typeTable[8] = typeof(global::System.Enum);
            _typeTable[9] = typeof(global::System.ValueType);
            _typeTable[10] = typeof(global::DatePicker.YearDataSource);
            _typeTable[11] = typeof(global::DatePicker.MonthDataSource);
            _typeTable[12] = typeof(global::DatePicker.DayDataSource);
            _typeTable[13] = typeof(global::DatePicker.DateTimeWrapper);
            _typeTable[14] = typeof(global::DatePicker.DatePicker);
            _typeTable[15] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[16] = typeof(global::System.Double);
            _typeTable[17] = typeof(global::System.DateTime);
            _typeTable[18] = typeof(global::DatePicker.Controls.LoopItemsPanel);
            _typeTable[19] = typeof(global::Windows.UI.Xaml.Controls.Panel);
            _typeTable[20] = typeof(global::DatePicker.ScrollAction);
            _typeTable[21] = typeof(global::ANG_ABP_INSTALLER_APP.Views.DownloadAllMyProjects);
            _typeTable[22] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[23] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[24] = typeof(global::ANG_ABP_INSTALLER_APP.Common.ObservableDictionary);
            _typeTable[25] = typeof(global::System.String);
            _typeTable[26] = typeof(global::ANG_ABP_INSTALLER_APP.Common.NavigationHelper);
            _typeTable[27] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[28] = typeof(global::ANG_ABP_INSTALLER_APP.Views.DownloadProjectPage);
            _typeTable[29] = typeof(global::ANG_ABP_INSTALLER_APP.Views.InstallerSearch);
            _typeTable[30] = typeof(global::ANG_ABP_INSTALLER_APP.Views.InstallationInputPartialPage);
            _typeTable[31] = typeof(global::ANG_ABP_INSTALLER_APP.Views.InstallationInputResultPage);
            _typeTable[32] = typeof(global::ANG_ABP_INSTALLER_APP.Views.InstallationInputSearchPage);
            _typeTable[33] = typeof(global::ANG_ABP_INSTALLER_APP.MainPage);
            _typeTable[34] = typeof(global::ANG_ABP_INSTALLER_APP.Views.SetInstallationDatesPage);
            _typeTable[35] = typeof(global::ANG_ABP_INSTALLER_APP.Views.SetInstallationDetailsPage);
            _typeTable[36] = typeof(global::ANG_ABP_INSTALLER_APP.Views.SetInstallationPhotosPage);
            _typeTable[37] = typeof(global::ANG_ABP_INSTALLER_APP.Views.SyncPage);
            _typeTable[38] = typeof(global::ANG_ABP_INSTALLER_APP.Views.UserSettingsPage);
            _typeTable[39] = typeof(global::ANG_ABP_INSTALLER_APP.Views.ViewImagePage);
            _typeTable[40] = typeof(global::ANG_ABP_INSTALLER_APP.Views.ViewMapPage);
            _typeTable[41] = typeof(global::ANG_ABP_INSTALLER_APP.Views.ViewNotes);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_PickerSelectorItem() { return new global::DatePicker.PickerSelectorItem(); }
        private object Activate_5_PickerSelector() { return new global::DatePicker.PickerSelector(); }
        private object Activate_10_YearDataSource() { return new global::DatePicker.YearDataSource(); }
        private object Activate_11_MonthDataSource() { return new global::DatePicker.MonthDataSource(); }
        private object Activate_12_DayDataSource() { return new global::DatePicker.DayDataSource(); }
        private object Activate_14_DatePicker() { return new global::DatePicker.DatePicker(); }
        private object Activate_18_LoopItemsPanel() { return new global::DatePicker.Controls.LoopItemsPanel(); }
        private object Activate_21_DownloadAllMyProjects() { return new global::ANG_ABP_INSTALLER_APP.Views.DownloadAllMyProjects(); }
        private object Activate_24_ObservableDictionary() { return new global::ANG_ABP_INSTALLER_APP.Common.ObservableDictionary(); }
        private object Activate_28_DownloadProjectPage() { return new global::ANG_ABP_INSTALLER_APP.Views.DownloadProjectPage(); }
        private object Activate_29_InstallerSearch() { return new global::ANG_ABP_INSTALLER_APP.Views.InstallerSearch(); }
        private object Activate_30_InstallationInputPartialPage() { return new global::ANG_ABP_INSTALLER_APP.Views.InstallationInputPartialPage(); }
        private object Activate_31_InstallationInputResultPage() { return new global::ANG_ABP_INSTALLER_APP.Views.InstallationInputResultPage(); }
        private object Activate_32_InstallationInputSearchPage() { return new global::ANG_ABP_INSTALLER_APP.Views.InstallationInputSearchPage(); }
        private object Activate_33_MainPage() { return new global::ANG_ABP_INSTALLER_APP.MainPage(); }
        private object Activate_34_SetInstallationDatesPage() { return new global::ANG_ABP_INSTALLER_APP.Views.SetInstallationDatesPage(); }
        private object Activate_35_SetInstallationDetailsPage() { return new global::ANG_ABP_INSTALLER_APP.Views.SetInstallationDetailsPage(); }
        private object Activate_36_SetInstallationPhotosPage() { return new global::ANG_ABP_INSTALLER_APP.Views.SetInstallationPhotosPage(); }
        private object Activate_37_SyncPage() { return new global::ANG_ABP_INSTALLER_APP.Views.SyncPage(); }
        private object Activate_38_UserSettingsPage() { return new global::ANG_ABP_INSTALLER_APP.Views.UserSettingsPage(); }
        private object Activate_39_ViewImagePage() { return new global::ANG_ABP_INSTALLER_APP.Views.ViewImagePage(); }
        private object Activate_40_ViewMapPage() { return new global::ANG_ABP_INSTALLER_APP.Views.ViewMapPage(); }
        private object Activate_41_ViewNotes() { return new global::ANG_ABP_INSTALLER_APP.Views.ViewNotes(); }
        private void MapAdd_24_ObservableDictionary(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>)instance;
            var newKey = (global::System.String)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  DatePicker.PickerSelectorItem
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_0_PickerSelectorItem;
                userType.SetContentPropertyName("DatePicker.PickerSelectorItem.Content");
                userType.AddMemberName("Content");
                userType.AddMemberName("RectPosition");
                userType.AddMemberName("ContentTemplate");
                userType.AddMemberName("IsSelected");
                userType.AddMemberName("IsFocused");
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Object
                xamlType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Windows.Foundation.Rect
                xamlType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  Boolean
                xamlType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  DatePicker.PickerSelector
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ItemsControl"));
                userType.Activator = Activate_5_PickerSelector;
                userType.AddMemberName("DataSourceType");
                userType.AddMemberName("YearDataSource");
                userType.AddMemberName("MonthDataSource");
                userType.AddMemberName("DayDataSource");
                userType.AddMemberName("RectPosition");
                userType.AddMemberName("IsFocused");
                userType.AddMemberName("SelectedItem");
                xamlType = userType;
                break;

            case 6:   //  Windows.UI.Xaml.Controls.ItemsControl
                xamlType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  DatePicker.DataSourceType
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Year", global::DatePicker.DataSourceType.Year);
                userType.AddEnumValue("Month", global::DatePicker.DataSourceType.Month);
                userType.AddEnumValue("Day", global::DatePicker.DataSourceType.Day);
                userType.AddEnumValue("Hour", global::DatePicker.DataSourceType.Hour);
                userType.AddEnumValue("Minute", global::DatePicker.DataSourceType.Minute);
                userType.AddEnumValue("Second", global::DatePicker.DataSourceType.Second);
                xamlType = userType;
                break;

            case 8:   //  System.Enum
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 9:   //  System.ValueType
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 10:   //  DatePicker.YearDataSource
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 11:   //  DatePicker.MonthDataSource
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 12:   //  DatePicker.DayDataSource
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 13:   //  DatePicker.DateTimeWrapper
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 14:   //  DatePicker.DatePicker
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_14_DatePicker;
                userType.AddMemberName("SmallFontSize");
                userType.AddMemberName("EnableFirstTapHasFocusOnly");
                userType.AddMemberName("Value");
                xamlType = userType;
                break;

            case 15:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  Double
                xamlType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 17:   //  System.DateTime
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 18:   //  DatePicker.Controls.LoopItemsPanel
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Panel"));
                userType.Activator = Activate_18_LoopItemsPanel;
                userType.AddMemberName("ScrollAction");
                userType.AddMemberName("ParentDatePicker");
                userType.AddMemberName("ParentDatePickerSelector");
                xamlType = userType;
                break;

            case 19:   //  Windows.UI.Xaml.Controls.Panel
                xamlType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  DatePicker.ScrollAction
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Down", global::DatePicker.ScrollAction.Down);
                userType.AddEnumValue("Up", global::DatePicker.ScrollAction.Up);
                xamlType = userType;
                break;

            case 21:   //  ANG_ABP_INSTALLER_APP.Views.DownloadAllMyProjects
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_21_DownloadAllMyProjects;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 22:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 23:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 24:   //  ANG_ABP_INSTALLER_APP.Common.ObservableDictionary
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.DictionaryAdd = MapAdd_24_ObservableDictionary;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 25:   //  String
                xamlType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 26:   //  ANG_ABP_INSTALLER_APP.Common.NavigationHelper
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 27:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 28:   //  ANG_ABP_INSTALLER_APP.Views.DownloadProjectPage
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_28_DownloadProjectPage;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 29:   //  ANG_ABP_INSTALLER_APP.Views.InstallerSearch
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_29_InstallerSearch;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 30:   //  ANG_ABP_INSTALLER_APP.Views.InstallationInputPartialPage
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_30_InstallationInputPartialPage;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 31:   //  ANG_ABP_INSTALLER_APP.Views.InstallationInputResultPage
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_31_InstallationInputResultPage;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  ANG_ABP_INSTALLER_APP.Views.InstallationInputSearchPage
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_32_InstallationInputSearchPage;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  ANG_ABP_INSTALLER_APP.MainPage
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_33_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 34:   //  ANG_ABP_INSTALLER_APP.Views.SetInstallationDatesPage
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_34_SetInstallationDatesPage;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  ANG_ABP_INSTALLER_APP.Views.SetInstallationDetailsPage
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_35_SetInstallationDetailsPage;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 36:   //  ANG_ABP_INSTALLER_APP.Views.SetInstallationPhotosPage
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_36_SetInstallationPhotosPage;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 37:   //  ANG_ABP_INSTALLER_APP.Views.SyncPage
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_37_SyncPage;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 38:   //  ANG_ABP_INSTALLER_APP.Views.UserSettingsPage
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_38_UserSettingsPage;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 39:   //  ANG_ABP_INSTALLER_APP.Views.ViewImagePage
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_39_ViewImagePage;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 40:   //  ANG_ABP_INSTALLER_APP.Views.ViewMapPage
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_40_ViewMapPage;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 41:   //  ANG_ABP_INSTALLER_APP.Views.ViewNotes
                userType = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_41_ViewNotes;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    _otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::DatePicker.DatePicker_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                    provider = new global::WinRTXamlToolkit.WinRTXamlToolkit_Windows_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_PickerSelectorItem_Content(object instance)
        {
            var that = (global::DatePicker.PickerSelectorItem)instance;
            return that.Content;
        }
        private void set_0_PickerSelectorItem_Content(object instance, object Value)
        {
            var that = (global::DatePicker.PickerSelectorItem)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_1_PickerSelectorItem_RectPosition(object instance)
        {
            var that = (global::DatePicker.PickerSelectorItem)instance;
            return that.RectPosition;
        }
        private void set_1_PickerSelectorItem_RectPosition(object instance, object Value)
        {
            var that = (global::DatePicker.PickerSelectorItem)instance;
            that.RectPosition = (global::Windows.Foundation.Rect)Value;
        }
        private object get_2_PickerSelectorItem_ContentTemplate(object instance)
        {
            var that = (global::DatePicker.PickerSelectorItem)instance;
            return that.ContentTemplate;
        }
        private void set_2_PickerSelectorItem_ContentTemplate(object instance, object Value)
        {
            var that = (global::DatePicker.PickerSelectorItem)instance;
            that.ContentTemplate = (global::System.Object)Value;
        }
        private object get_3_PickerSelectorItem_IsSelected(object instance)
        {
            var that = (global::DatePicker.PickerSelectorItem)instance;
            return that.IsSelected;
        }
        private void set_3_PickerSelectorItem_IsSelected(object instance, object Value)
        {
            var that = (global::DatePicker.PickerSelectorItem)instance;
            that.IsSelected = (global::System.Boolean)Value;
        }
        private object get_4_PickerSelectorItem_IsFocused(object instance)
        {
            var that = (global::DatePicker.PickerSelectorItem)instance;
            return that.IsFocused;
        }
        private void set_4_PickerSelectorItem_IsFocused(object instance, object Value)
        {
            var that = (global::DatePicker.PickerSelectorItem)instance;
            that.IsFocused = (global::System.Boolean)Value;
        }
        private object get_5_PickerSelector_DataSourceType(object instance)
        {
            var that = (global::DatePicker.PickerSelector)instance;
            return that.DataSourceType;
        }
        private void set_5_PickerSelector_DataSourceType(object instance, object Value)
        {
            var that = (global::DatePicker.PickerSelector)instance;
            that.DataSourceType = (global::DatePicker.DataSourceType)Value;
        }
        private object get_6_PickerSelector_YearDataSource(object instance)
        {
            var that = (global::DatePicker.PickerSelector)instance;
            return that.YearDataSource;
        }
        private void set_6_PickerSelector_YearDataSource(object instance, object Value)
        {
            var that = (global::DatePicker.PickerSelector)instance;
            that.YearDataSource = (global::DatePicker.YearDataSource)Value;
        }
        private object get_7_PickerSelector_MonthDataSource(object instance)
        {
            var that = (global::DatePicker.PickerSelector)instance;
            return that.MonthDataSource;
        }
        private void set_7_PickerSelector_MonthDataSource(object instance, object Value)
        {
            var that = (global::DatePicker.PickerSelector)instance;
            that.MonthDataSource = (global::DatePicker.MonthDataSource)Value;
        }
        private object get_8_PickerSelector_DayDataSource(object instance)
        {
            var that = (global::DatePicker.PickerSelector)instance;
            return that.DayDataSource;
        }
        private void set_8_PickerSelector_DayDataSource(object instance, object Value)
        {
            var that = (global::DatePicker.PickerSelector)instance;
            that.DayDataSource = (global::DatePicker.DayDataSource)Value;
        }
        private object get_9_PickerSelector_RectPosition(object instance)
        {
            var that = (global::DatePicker.PickerSelector)instance;
            return that.RectPosition;
        }
        private void set_9_PickerSelector_RectPosition(object instance, object Value)
        {
            var that = (global::DatePicker.PickerSelector)instance;
            that.RectPosition = (global::Windows.Foundation.Rect)Value;
        }
        private object get_10_PickerSelector_IsFocused(object instance)
        {
            var that = (global::DatePicker.PickerSelector)instance;
            return that.IsFocused;
        }
        private void set_10_PickerSelector_IsFocused(object instance, object Value)
        {
            var that = (global::DatePicker.PickerSelector)instance;
            that.IsFocused = (global::System.Boolean)Value;
        }
        private object get_11_PickerSelector_SelectedItem(object instance)
        {
            var that = (global::DatePicker.PickerSelector)instance;
            return that.SelectedItem;
        }
        private void set_11_PickerSelector_SelectedItem(object instance, object Value)
        {
            var that = (global::DatePicker.PickerSelector)instance;
            that.SelectedItem = (global::DatePicker.DateTimeWrapper)Value;
        }
        private object get_12_DatePicker_SmallFontSize(object instance)
        {
            var that = (global::DatePicker.DatePicker)instance;
            return that.SmallFontSize;
        }
        private void set_12_DatePicker_SmallFontSize(object instance, object Value)
        {
            var that = (global::DatePicker.DatePicker)instance;
            that.SmallFontSize = (global::System.Double)Value;
        }
        private object get_13_DatePicker_EnableFirstTapHasFocusOnly(object instance)
        {
            var that = (global::DatePicker.DatePicker)instance;
            return that.EnableFirstTapHasFocusOnly;
        }
        private void set_13_DatePicker_EnableFirstTapHasFocusOnly(object instance, object Value)
        {
            var that = (global::DatePicker.DatePicker)instance;
            that.EnableFirstTapHasFocusOnly = (global::System.Boolean)Value;
        }
        private object get_14_DatePicker_Value(object instance)
        {
            var that = (global::DatePicker.DatePicker)instance;
            return that.Value;
        }
        private void set_14_DatePicker_Value(object instance, object Value)
        {
            var that = (global::DatePicker.DatePicker)instance;
            that.Value = (global::System.DateTime)Value;
        }
        private object get_15_LoopItemsPanel_ScrollAction(object instance)
        {
            var that = (global::DatePicker.Controls.LoopItemsPanel)instance;
            return that.ScrollAction;
        }
        private void set_15_LoopItemsPanel_ScrollAction(object instance, object Value)
        {
            var that = (global::DatePicker.Controls.LoopItemsPanel)instance;
            that.ScrollAction = (global::DatePicker.ScrollAction)Value;
        }
        private object get_16_LoopItemsPanel_ParentDatePicker(object instance)
        {
            var that = (global::DatePicker.Controls.LoopItemsPanel)instance;
            return that.ParentDatePicker;
        }
        private object get_17_LoopItemsPanel_ParentDatePickerSelector(object instance)
        {
            var that = (global::DatePicker.Controls.LoopItemsPanel)instance;
            return that.ParentDatePickerSelector;
        }
        private object get_18_DownloadAllMyProjects_DefaultViewModel(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.DownloadAllMyProjects)instance;
            return that.DefaultViewModel;
        }
        private object get_19_DownloadAllMyProjects_NavigationHelper(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.DownloadAllMyProjects)instance;
            return that.NavigationHelper;
        }
        private object get_20_DownloadProjectPage_DefaultViewModel(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.DownloadProjectPage)instance;
            return that.DefaultViewModel;
        }
        private object get_21_DownloadProjectPage_NavigationHelper(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.DownloadProjectPage)instance;
            return that.NavigationHelper;
        }
        private object get_22_InstallationInputPartialPage_DefaultViewModel(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.InstallationInputPartialPage)instance;
            return that.DefaultViewModel;
        }
        private object get_23_InstallationInputPartialPage_NavigationHelper(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.InstallationInputPartialPage)instance;
            return that.NavigationHelper;
        }
        private object get_24_InstallationInputResultPage_DefaultViewModel(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.InstallationInputResultPage)instance;
            return that.DefaultViewModel;
        }
        private object get_25_InstallationInputResultPage_NavigationHelper(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.InstallationInputResultPage)instance;
            return that.NavigationHelper;
        }
        private object get_26_InstallationInputSearchPage_DefaultViewModel(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.InstallationInputSearchPage)instance;
            return that.DefaultViewModel;
        }
        private object get_27_InstallationInputSearchPage_NavigationHelper(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.InstallationInputSearchPage)instance;
            return that.NavigationHelper;
        }
        private object get_28_SetInstallationDatesPage_DefaultViewModel(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.SetInstallationDatesPage)instance;
            return that.DefaultViewModel;
        }
        private object get_29_SetInstallationDatesPage_NavigationHelper(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.SetInstallationDatesPage)instance;
            return that.NavigationHelper;
        }
        private object get_30_SetInstallationDetailsPage_DefaultViewModel(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.SetInstallationDetailsPage)instance;
            return that.DefaultViewModel;
        }
        private object get_31_SetInstallationDetailsPage_NavigationHelper(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.SetInstallationDetailsPage)instance;
            return that.NavigationHelper;
        }
        private object get_32_SetInstallationPhotosPage_DefaultViewModel(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.SetInstallationPhotosPage)instance;
            return that.DefaultViewModel;
        }
        private object get_33_SetInstallationPhotosPage_NavigationHelper(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.SetInstallationPhotosPage)instance;
            return that.NavigationHelper;
        }
        private object get_34_SyncPage_DefaultViewModel(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.SyncPage)instance;
            return that.DefaultViewModel;
        }
        private object get_35_SyncPage_NavigationHelper(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.SyncPage)instance;
            return that.NavigationHelper;
        }
        private object get_36_UserSettingsPage_DefaultViewModel(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.UserSettingsPage)instance;
            return that.DefaultViewModel;
        }
        private object get_37_UserSettingsPage_NavigationHelper(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.UserSettingsPage)instance;
            return that.NavigationHelper;
        }
        private object get_38_ViewImagePage_DefaultViewModel(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.ViewImagePage)instance;
            return that.DefaultViewModel;
        }
        private object get_39_ViewImagePage_NavigationHelper(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.ViewImagePage)instance;
            return that.NavigationHelper;
        }
        private object get_40_ViewMapPage_DefaultViewModel(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.ViewMapPage)instance;
            return that.DefaultViewModel;
        }
        private object get_41_ViewMapPage_NavigationHelper(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.ViewMapPage)instance;
            return that.NavigationHelper;
        }
        private object get_42_ViewNotes_DefaultViewModel(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.ViewNotes)instance;
            return that.DefaultViewModel;
        }
        private object get_43_ViewNotes_NavigationHelper(object instance)
        {
            var that = (global::ANG_ABP_INSTALLER_APP.Views.ViewNotes)instance;
            return that.NavigationHelper;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember xamlMember = null;
            global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "DatePicker.PickerSelectorItem.Content":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DatePicker.PickerSelectorItem");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_PickerSelectorItem_Content;
                xamlMember.Setter = set_0_PickerSelectorItem_Content;
                break;
            case "DatePicker.PickerSelectorItem.RectPosition":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DatePicker.PickerSelectorItem");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "RectPosition", "Windows.Foundation.Rect");
                xamlMember.Getter = get_1_PickerSelectorItem_RectPosition;
                xamlMember.Setter = set_1_PickerSelectorItem_RectPosition;
                break;
            case "DatePicker.PickerSelectorItem.ContentTemplate":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DatePicker.PickerSelectorItem");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "ContentTemplate", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_PickerSelectorItem_ContentTemplate;
                xamlMember.Setter = set_2_PickerSelectorItem_ContentTemplate;
                break;
            case "DatePicker.PickerSelectorItem.IsSelected":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DatePicker.PickerSelectorItem");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_PickerSelectorItem_IsSelected;
                xamlMember.Setter = set_3_PickerSelectorItem_IsSelected;
                break;
            case "DatePicker.PickerSelectorItem.IsFocused":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DatePicker.PickerSelectorItem");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "IsFocused", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_PickerSelectorItem_IsFocused;
                xamlMember.Setter = set_4_PickerSelectorItem_IsFocused;
                break;
            case "DatePicker.PickerSelector.DataSourceType":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DatePicker.PickerSelector");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "DataSourceType", "DatePicker.DataSourceType");
                xamlMember.Getter = get_5_PickerSelector_DataSourceType;
                xamlMember.Setter = set_5_PickerSelector_DataSourceType;
                break;
            case "DatePicker.PickerSelector.YearDataSource":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DatePicker.PickerSelector");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "YearDataSource", "DatePicker.YearDataSource");
                xamlMember.Getter = get_6_PickerSelector_YearDataSource;
                xamlMember.Setter = set_6_PickerSelector_YearDataSource;
                break;
            case "DatePicker.PickerSelector.MonthDataSource":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DatePicker.PickerSelector");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "MonthDataSource", "DatePicker.MonthDataSource");
                xamlMember.Getter = get_7_PickerSelector_MonthDataSource;
                xamlMember.Setter = set_7_PickerSelector_MonthDataSource;
                break;
            case "DatePicker.PickerSelector.DayDataSource":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DatePicker.PickerSelector");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "DayDataSource", "DatePicker.DayDataSource");
                xamlMember.Getter = get_8_PickerSelector_DayDataSource;
                xamlMember.Setter = set_8_PickerSelector_DayDataSource;
                break;
            case "DatePicker.PickerSelector.RectPosition":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DatePicker.PickerSelector");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "RectPosition", "Windows.Foundation.Rect");
                xamlMember.Getter = get_9_PickerSelector_RectPosition;
                xamlMember.Setter = set_9_PickerSelector_RectPosition;
                break;
            case "DatePicker.PickerSelector.IsFocused":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DatePicker.PickerSelector");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "IsFocused", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_PickerSelector_IsFocused;
                xamlMember.Setter = set_10_PickerSelector_IsFocused;
                break;
            case "DatePicker.PickerSelector.SelectedItem":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DatePicker.PickerSelector");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "SelectedItem", "DatePicker.DateTimeWrapper");
                xamlMember.Getter = get_11_PickerSelector_SelectedItem;
                xamlMember.Setter = set_11_PickerSelector_SelectedItem;
                break;
            case "DatePicker.DatePicker.SmallFontSize":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DatePicker.DatePicker");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "SmallFontSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_DatePicker_SmallFontSize;
                xamlMember.Setter = set_12_DatePicker_SmallFontSize;
                break;
            case "DatePicker.DatePicker.EnableFirstTapHasFocusOnly":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DatePicker.DatePicker");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "EnableFirstTapHasFocusOnly", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_DatePicker_EnableFirstTapHasFocusOnly;
                xamlMember.Setter = set_13_DatePicker_EnableFirstTapHasFocusOnly;
                break;
            case "DatePicker.DatePicker.Value":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DatePicker.DatePicker");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "Value", "System.DateTime");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_DatePicker_Value;
                xamlMember.Setter = set_14_DatePicker_Value;
                break;
            case "DatePicker.Controls.LoopItemsPanel.ScrollAction":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DatePicker.Controls.LoopItemsPanel");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "ScrollAction", "DatePicker.ScrollAction");
                xamlMember.Getter = get_15_LoopItemsPanel_ScrollAction;
                xamlMember.Setter = set_15_LoopItemsPanel_ScrollAction;
                break;
            case "DatePicker.Controls.LoopItemsPanel.ParentDatePicker":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DatePicker.Controls.LoopItemsPanel");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "ParentDatePicker", "DatePicker.DatePicker");
                xamlMember.Getter = get_16_LoopItemsPanel_ParentDatePicker;
                xamlMember.SetIsReadOnly();
                break;
            case "DatePicker.Controls.LoopItemsPanel.ParentDatePickerSelector":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DatePicker.Controls.LoopItemsPanel");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "ParentDatePickerSelector", "DatePicker.PickerSelector");
                xamlMember.Getter = get_17_LoopItemsPanel_ParentDatePickerSelector;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.DownloadAllMyProjects.DefaultViewModel":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.DownloadAllMyProjects");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "ANG_ABP_INSTALLER_APP.Common.ObservableDictionary");
                xamlMember.Getter = get_18_DownloadAllMyProjects_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.DownloadAllMyProjects.NavigationHelper":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.DownloadAllMyProjects");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "NavigationHelper", "ANG_ABP_INSTALLER_APP.Common.NavigationHelper");
                xamlMember.Getter = get_19_DownloadAllMyProjects_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.DownloadProjectPage.DefaultViewModel":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.DownloadProjectPage");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "ANG_ABP_INSTALLER_APP.Common.ObservableDictionary");
                xamlMember.Getter = get_20_DownloadProjectPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.DownloadProjectPage.NavigationHelper":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.DownloadProjectPage");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "NavigationHelper", "ANG_ABP_INSTALLER_APP.Common.NavigationHelper");
                xamlMember.Getter = get_21_DownloadProjectPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.InstallationInputPartialPage.DefaultViewModel":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.InstallationInputPartialPage");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "ANG_ABP_INSTALLER_APP.Common.ObservableDictionary");
                xamlMember.Getter = get_22_InstallationInputPartialPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.InstallationInputPartialPage.NavigationHelper":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.InstallationInputPartialPage");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "NavigationHelper", "ANG_ABP_INSTALLER_APP.Common.NavigationHelper");
                xamlMember.Getter = get_23_InstallationInputPartialPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.InstallationInputResultPage.DefaultViewModel":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.InstallationInputResultPage");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "ANG_ABP_INSTALLER_APP.Common.ObservableDictionary");
                xamlMember.Getter = get_24_InstallationInputResultPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.InstallationInputResultPage.NavigationHelper":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.InstallationInputResultPage");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "NavigationHelper", "ANG_ABP_INSTALLER_APP.Common.NavigationHelper");
                xamlMember.Getter = get_25_InstallationInputResultPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.InstallationInputSearchPage.DefaultViewModel":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.InstallationInputSearchPage");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "ANG_ABP_INSTALLER_APP.Common.ObservableDictionary");
                xamlMember.Getter = get_26_InstallationInputSearchPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.InstallationInputSearchPage.NavigationHelper":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.InstallationInputSearchPage");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "NavigationHelper", "ANG_ABP_INSTALLER_APP.Common.NavigationHelper");
                xamlMember.Getter = get_27_InstallationInputSearchPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.SetInstallationDatesPage.DefaultViewModel":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.SetInstallationDatesPage");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "ANG_ABP_INSTALLER_APP.Common.ObservableDictionary");
                xamlMember.Getter = get_28_SetInstallationDatesPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.SetInstallationDatesPage.NavigationHelper":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.SetInstallationDatesPage");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "NavigationHelper", "ANG_ABP_INSTALLER_APP.Common.NavigationHelper");
                xamlMember.Getter = get_29_SetInstallationDatesPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.SetInstallationDetailsPage.DefaultViewModel":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.SetInstallationDetailsPage");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "ANG_ABP_INSTALLER_APP.Common.ObservableDictionary");
                xamlMember.Getter = get_30_SetInstallationDetailsPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.SetInstallationDetailsPage.NavigationHelper":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.SetInstallationDetailsPage");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "NavigationHelper", "ANG_ABP_INSTALLER_APP.Common.NavigationHelper");
                xamlMember.Getter = get_31_SetInstallationDetailsPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.SetInstallationPhotosPage.DefaultViewModel":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.SetInstallationPhotosPage");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "ANG_ABP_INSTALLER_APP.Common.ObservableDictionary");
                xamlMember.Getter = get_32_SetInstallationPhotosPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.SetInstallationPhotosPage.NavigationHelper":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.SetInstallationPhotosPage");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "NavigationHelper", "ANG_ABP_INSTALLER_APP.Common.NavigationHelper");
                xamlMember.Getter = get_33_SetInstallationPhotosPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.SyncPage.DefaultViewModel":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.SyncPage");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "ANG_ABP_INSTALLER_APP.Common.ObservableDictionary");
                xamlMember.Getter = get_34_SyncPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.SyncPage.NavigationHelper":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.SyncPage");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "NavigationHelper", "ANG_ABP_INSTALLER_APP.Common.NavigationHelper");
                xamlMember.Getter = get_35_SyncPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.UserSettingsPage.DefaultViewModel":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.UserSettingsPage");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "ANG_ABP_INSTALLER_APP.Common.ObservableDictionary");
                xamlMember.Getter = get_36_UserSettingsPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.UserSettingsPage.NavigationHelper":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.UserSettingsPage");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "NavigationHelper", "ANG_ABP_INSTALLER_APP.Common.NavigationHelper");
                xamlMember.Getter = get_37_UserSettingsPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.ViewImagePage.DefaultViewModel":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.ViewImagePage");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "ANG_ABP_INSTALLER_APP.Common.ObservableDictionary");
                xamlMember.Getter = get_38_ViewImagePage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.ViewImagePage.NavigationHelper":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.ViewImagePage");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "NavigationHelper", "ANG_ABP_INSTALLER_APP.Common.NavigationHelper");
                xamlMember.Getter = get_39_ViewImagePage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.ViewMapPage.DefaultViewModel":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.ViewMapPage");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "ANG_ABP_INSTALLER_APP.Common.ObservableDictionary");
                xamlMember.Getter = get_40_ViewMapPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.ViewMapPage.NavigationHelper":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.ViewMapPage");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "NavigationHelper", "ANG_ABP_INSTALLER_APP.Common.NavigationHelper");
                xamlMember.Getter = get_41_ViewMapPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.ViewNotes.DefaultViewModel":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.ViewNotes");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "ANG_ABP_INSTALLER_APP.Common.ObservableDictionary");
                xamlMember.Getter = get_42_ViewNotes_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "ANG_ABP_INSTALLER_APP.Views.ViewNotes.NavigationHelper":
                userType = (global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ANG_ABP_INSTALLER_APP.Views.ViewNotes");
                xamlMember = new global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlMember(this, "NavigationHelper", "ANG_ABP_INSTALLER_APP.Common.NavigationHelper");
                xamlMember.Getter = get_43_ViewNotes_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlSystemBaseType
    {
        global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::ANG_ABP_INSTALLER_APP.ANG_ABP_INSTALLER_APP_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


