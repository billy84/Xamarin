//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 12.0.21005.1
// 
namespace ANG_ABP_SURVEYOR_APP_CLASS.wcfErrorLog {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorInfo", Namespace="http://schemas.datacontract.org/2004/07/ANG_RET_FM_ERRORLOG_WCF_EXTERNAL")]
    public partial class ErrorInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int iPriorityField;
        
        private string sClassNameField;
        
        private string sEx_MessageField;
        
        private string sEx_SourceField;
        
        private string sEx_StackTraceField;
        
        private string sInformationField;
        
        private string sMachineNameField;
        
        private string sMethodNameField;
        
        private string sProductNameField;
        
        private string sProductVersionField;
        
        private string sUserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int iPriority {
            get {
                return this.iPriorityField;
            }
            set {
                if ((this.iPriorityField.Equals(value) != true)) {
                    this.iPriorityField = value;
                    this.RaisePropertyChanged("iPriority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sClassName {
            get {
                return this.sClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.sClassNameField, value) != true)) {
                    this.sClassNameField = value;
                    this.RaisePropertyChanged("sClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sEx_Message {
            get {
                return this.sEx_MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.sEx_MessageField, value) != true)) {
                    this.sEx_MessageField = value;
                    this.RaisePropertyChanged("sEx_Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sEx_Source {
            get {
                return this.sEx_SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.sEx_SourceField, value) != true)) {
                    this.sEx_SourceField = value;
                    this.RaisePropertyChanged("sEx_Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sEx_StackTrace {
            get {
                return this.sEx_StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.sEx_StackTraceField, value) != true)) {
                    this.sEx_StackTraceField = value;
                    this.RaisePropertyChanged("sEx_StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sInformation {
            get {
                return this.sInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.sInformationField, value) != true)) {
                    this.sInformationField = value;
                    this.RaisePropertyChanged("sInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sMachineName {
            get {
                return this.sMachineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.sMachineNameField, value) != true)) {
                    this.sMachineNameField = value;
                    this.RaisePropertyChanged("sMachineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sMethodName {
            get {
                return this.sMethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.sMethodNameField, value) != true)) {
                    this.sMethodNameField = value;
                    this.RaisePropertyChanged("sMethodName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sProductName {
            get {
                return this.sProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.sProductNameField, value) != true)) {
                    this.sProductNameField = value;
                    this.RaisePropertyChanged("sProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sProductVersion {
            get {
                return this.sProductVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.sProductVersionField, value) != true)) {
                    this.sProductVersionField = value;
                    this.RaisePropertyChanged("sProductVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sUserName {
            get {
                return this.sUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.sUserNameField, value) != true)) {
                    this.sUserNameField = value;
                    this.RaisePropertyChanged("sUserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="wcfErrorLog.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ReportError", ReplyAction="http://tempuri.org/IService/ReportErrorResponse")]
        System.Threading.Tasks.Task<bool> ReportErrorAsync(string v_sStatus, ANG_ABP_SURVEYOR_APP_CLASS.wcfErrorLog.ErrorInfo v_eiError);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : ANG_ABP_SURVEYOR_APP_CLASS.wcfErrorLog.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<ANG_ABP_SURVEYOR_APP_CLASS.wcfErrorLog.IService>, ANG_ABP_SURVEYOR_APP_CLASS.wcfErrorLog.IService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceClient() : 
                base(ServiceClient.GetDefaultBinding(), ServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), ServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<bool> ReportErrorAsync(string v_sStatus, ANG_ABP_SURVEYOR_APP_CLASS.wcfErrorLog.ErrorInfo v_eiError) {
            return base.Channel.ReportErrorAsync(v_sStatus, v_eiError);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService)) {
                return new System.ServiceModel.EndpointAddress("https://fclext.anglian-windows.com/fmerrorlog/Service.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return ServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return ServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IService);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IService,
        }
    }
}
